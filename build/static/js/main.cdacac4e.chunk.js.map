{"version":3,"sources":["components/General/NavBar.js","components/Quiz_Catalog/BoxTest.js","components/Quiz_Catalog/QuizBox.js","components/Quiz/Answers.js","components/Quiz/Question.js","components/Quiz/Questions.js","components/General/MyLoader.js","components/analytics/charts/PieCharts.js","components/analytics/Chart.js","components/analytics/Charts.js","components/analytics/Analytics.js","components/Results/Result.js","components/Quiz/Quiz.js","components/Quiz_Catalog/QuizzesScreen.js","components/Landing/LandingPage.js","components/Landing/HomePage.js","components/Create/QuestionForm.js","components/Create/ResultsForm.js","components/Create/CreateQuizForm.js","components/Horoscope/Horoscope.js","components/Cloud/Cloud.js","App.js","serviceWorker.js","store/quizStore.js","index.js"],"names":["NavBar","inject","observer","this","redirect","react_default","a","createElement","Redirect","push","to","className","id","props","store","user","userName","Link","onClick","logout","Component","observable","action","_this2","BoxTest","startQuiz","_this","selectQuiz","quiz","_id","type","data-toggle","data-target","title","desc","QuizBox","Quiz_Catalog_BoxTest","Answers","answers","questions","index","map","answer","key","name","score","value","text","onChange","changeAnswer","htmlFor","e","_this3","parseInt","target","checkAnswer","Question","question","Quiz_Answers","Questions","Quiz_Question","nextquestion","length","addAnswer","endQuiz","alert","MyLoader","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","wrapperClass","loaded","children","react_loader_spinner_default","color","PieCharts","PieChart","width","height","onMouseEnter","onPieEnter","Tooltip","Pie","data","cx","cy","innerRadius","outerRadius","fill","paddingAngle","label","entry","Cell","colors","Chart","getData","_callee","quizID","users","regenerator_default","wrap","_context","prev","next","axios","get","sent","sortResults","stop","results","r","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","quizzes","filter","qID","err","return","componentDidMount","getChart","chartType","charts_PieCharts","console","error","General_MyLoader","Charts","getCharts","pieDataKey","pieNameKey","c","analytics_Chart","url","layout","Analytics","analytics_Charts","Result","result","analytics_Analytics","Quiz","getResult","finalResult","getCurrentQuizz","Results_Result","Quiz_Questions","calcFinalResult","showQuiz","userAnswers","greatestOccurring","count","j","val","occ","saveUserResults","QuizzesScreen","getQuizzes","selectedQuiz","components_Quiz_Quiz","q","Quiz_Catalog_QuizBox","quizId","LandingPage","login","addUser","inputChange","HomePage","QuestionForm","currentQuestion","addQuestion","answer1","answer2","answer3","answer4","showNewQuestionSection","placeholder","showExistingQuestions","showNew","defaultValue","createNewQuestion","saveQuestions","formattedQuestions","ResultsForm","title1","desc1","title2","desc2","title3","desc3","title4","desc4","saveResults","formattedResults","CreateForm","formInputs","description","quizQuestions","quizResults","saveQuiz","header","rows","cols","Create_ResultsForm","Create_QuestionForm","Horoscope","showHoroscope","horoscopeData","sign","current_date","compatibility","lucky_number","lucky_time","date_range","mood","userSign","changeInput","getMyHoroscope","URL","fetch","method","then","response","json","Cloud","db","word","size","list","WordCloud","miniumFontSize","refs","weightFactor","fontFamily","rotationSteps","backgroundColor","wait","ref","App","navbarHide","General_NavBar","BrowserRouter","Route","path","exact","render","Landing_LandingPage","Quiz_Catalog_QuizzesScreen","CreateQuizForm","Landing_HomePage","components_Horoscope_Horoscope","components_Cloud_Cloud","Boolean","window","location","hostname","match","JSON","parse","localStorage","getItem","newUser","setItem","stringify","_callee2","allQuizzes","_context2","_callee3","currentQuizz","_context3","_this4","_callee4","newQuiz","_context4","post","log","_callee5","userQuiz","_context5","_this5","ReactDOM","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdacac4e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../css/nav-bar.css';\nimport { observer, inject } from 'mobx-react';\nimport { observable, action } from \"mobx\";\nimport { Redirect } from 'react-router';\n\n@inject('store')\n@observer\nclass NavBar extends Component {\n    @observable redirect = false;\n    \n    @action logout = () => {\n        this.props.store.logout()\n        this.redirect = true;\n    }\n\n    render() {\n        if (this.redirect) {\n            return <Redirect push to=\"/\" />;\n        }\n        return (\n            <nav className=\"allnavbar\">\n                <div className=\"logo\">\n                    <span className=\"leftnavbar\">\n                        QUIZZA\n                    </span>\n                    <span id=\"username\">Hello, {this.props.store.user.userName}!</span>\n                    <span className=\"rightnavbar\">\n                        <Link to=\"/home\" className='navLinks'><i className=\"fas fa-home\"></i><span> Home </span></Link>\n                        <Link to='/' className='navLinks' onClick={this.logout}>\n                        <i className=\"fas fa-sign-in-alt\"></i><span> Logout </span>\n                        </Link>\n                    </span>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\n\n@inject('store')\n@observer\nclass BoxTest extends Component {\n\n    startQuiz = () => this.props.selectQuiz(this.props.quiz._id)\n\n    render() {\n        return (\n            <div id=\"about\" className=\"page-section\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                            <button type=\"button\" id=\"buttonModal1\" data-toggle=\"modal\" data-target=\"#myModal1\" onClick={this.startQuiz}>\n                                <div className=\"service-item second-service\">\n                                    <div className=\"icon\"></div>\n                                    <div>\n                                        <h4> {this.props.quiz.title} </h4>\n                                        <p> {this.props.quiz.desc} </p>\n                                    </div>\n                                </div>\n                            </button >\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BoxTest;","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport BoxTest from './BoxTest';\n\n@inject('store')\n@observer\nclass QuizBox extends Component {\n\n    render() {\n        return (\n            <div className='box-link'>\n                <BoxTest selectQuiz={this.props.selectQuiz} quiz={this.props.quiz} />\n            </div>\n        );\n    }\n}\n\nexport default QuizBox;\n\n","import React, { Component } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport { observable, action } from \"mobx\";\n\n@inject(\"store\")\n@observer\nclass Answers extends Component {\n\n    @observable answer = 0\n\n    @action changeAnswer = (e) => {\n        this.answer = parseInt(e.target.id)\n        this.props.checkAnswer(this.answer)\n    }\n\n    render() {\n        const answers = this.props.store.quiz.questions[this.props.index].answers;\n        return (\n            <div className=\"answers\">\n                {answers.map((answer) => {\n                    return (\n                        <div className=\"answer\" key={answer._id}>\n                            <input type=\"radio\" name=\"answer\" id={answer.score} key={answer.score} value={answer.text} onChange={this.changeAnswer} />\n                            <label htmlFor={answer.score}>{answer.text}</label>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Answers;","import React, { Component } from 'react';\nimport Answers from './Answers';\nimport { inject, observer } from 'mobx-react';\n\n@inject(\"store\")\n@observer\nclass Question extends Component {\n\n    render() {\n        let question = this.props.store.quiz.questions[this.props.index]\n        return (\n            <div className=\"question\">\n                <h3>{question.text}</h3>\n                <Answers index={this.props.index} checkAnswer={this.props.checkAnswer} />\n            </div>\n        )\n    }\n}\n\nexport default Question;","import React, { Component } from \"react\";\nimport Question from './Question';\nimport { observer, inject } from \"mobx-react\";\nimport { observable, action } from 'mobx'\n\n@inject(\"store\")\n@observer\nclass Questions extends Component {\n    @observable index = 0\n    @observable answer = 0\n\n\n    checkAnswer = (answer) => {\n        if (answer) this.answer = answer\n    }\n\n    @action nextquestion = () => {\n        if (this.answer) {\n            let length = this.props.store.quiz.questions.length\n            if (this.index < length - 1) {\n                this.props.addAnswer(this.answer)\n                this.answer = 0\n                this.index++\n            }\n            else {\n                this.props.addAnswer(this.answer)\n                this.props.endQuiz()\n            }\n        }\n        else {\n            alert(\"Please choose a answer to continue\")\n        }\n\n    }\n    render() {\n\n        return (\n            <div className=\"Questions\">\n                <Question index={this.index} key={this.index} checkAnswer={this.checkAnswer} />\n                <form>\n                    <span><input type=\"button\" className=\"next-button\" value=\"next\" onClick={this.nextquestion} /></span>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Questions;","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport '../../css/loader.css';\n\nexport class MyLoader extends Component {\n    render() {\n        return (\n            <div className={this.props.wrapperClass}>\n\n                {this.props.loaded ?\n                    <div>{this.props.children}</div>\n                    :\n                    (<div className=\"loader-container\">\n                        <Loader type=\"Triangle\" color=\"#F7CE3E\" />\n                    </div>)\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default MyLoader","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { ResponsiveContainer, Tooltip, Legend, PieChart, Pie, Cell } from 'recharts';\n\n@inject('store')\n@observer\nclass PieCharts extends Component {\n    render() {\n        return (\n            <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\n                <Tooltip />\n                <Pie\n                    data={this.props.data}\n                    cx={120}\n                    cy={200}\n                    innerRadius={60}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    paddingAngle={5}\n                    label\n                >\n                    {this.props.data.map((entry, index) => <Cell fill={this.props.colors[index % this.props.colors.length]} />)}\n                </Pie>\n            </PieChart>\n        );\n    }\n}\n\nexport default PieCharts;","import React, { Component } from 'react'\nimport { observer, inject } from 'mobx-react';\nimport axios from 'axios';\n// import apiUtils from '../../utils/apiUtils';\nimport MyLoader from '../General/MyLoader';\nimport PieCharts from './charts/PieCharts';\nimport { observable } from 'mobx';\n\n@inject('store')\n@observer\nclass Chart extends Component {\n    @observable data = null;\n    @observable loaded = false;\n\n    getData = async () => {\n        let quizID = this.props.store.quiz._id;\n        let users = await axios.get('/user/quizzes/' + quizID)\n        this.sortResults(users.data);\n        this.loaded = true;\n    };\n\n    sortResults = (users) => {\n        this.data = [\n            { name: '', value: 1 },\n            { name: '', value: 1 },\n            { name: '', value: 1 },\n            { name: '', value: 1 }\n        ]\n\n        let results = this.props.store.quiz.results\n        results.map((r, i) => this.data[i].name = r.title)\n\n        for (let user of users) {\n            let score = user.quizzes.filter(quiz => quiz.qID === this.props.store.quiz._id)[0].score\n            this.data[score - 1].value++\n        }\n    }\n\n    componentDidMount = () => {\n        this.getData();\n    };\n\n    getChart = () => {\n        switch (this.props.chartType) {\n            case 'pie':\n                return (\n                    <PieCharts data={this.data} colors={this.props.colors} />\n                );\n            default:\n                console.error('Invalid chartType prop');\n        }\n    };\n\n\n    render() {\n        return (\n            <MyLoader loaded={this.loaded} wrapperClass=\"chart-item\">\n                <p> {this.props.title} </p>\n                {this.data ? this.getChart() : null}\n            </MyLoader>\n        );\n    }\n}\n\nexport default Chart;","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport Chart from './Chart';\n// import apiUtils from '../../utils/apiUtils';\n\n@inject('store')\n@observer\nclass Charts extends Component {\n\n    // userResults = this.props.store.userResults // url part?\n\n    getCharts = () => {\n        // adding something with MOMENT package? adding dates/ months\n        const charts = [\n            {\n                id: 'resultsAcquisition',\n                title: 'Results Acquisition',\n                // url: apiUtils.CHARTS_ACQUISITION,\n                chartType: 'pie',\n                colors: ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'],\n                pieDataKey: 'results',\n                pieNameKey: 'quiz'\n            }\n        ];\n        return charts;\n    };\n\n    render() {\n        return (\n            <div className=\"charts-container main-container\">\n                {this.getCharts().map(c =>\n                    <Chart\n                        key={c.id}\n                        id={c.id}\n                        title={c.title}\n                        url={c.url}\n                        chartType={c.chartType}\n                        color={c.color}\n                        colors={c.colors}\n                        layout={c.layout}\n                        pieDataKey={c.pieDataKey}\n                        pieNameKey={c.pieNameKey}\n                    />\n                )}\n            </div>\n        )\n    }\n}\n\nexport default Charts;","import React, { Component } from 'react';\nimport Charts from './Charts';\nimport '../../css/analytics.css';\n\nclass Analytics extends Component {\n\n    render() {\n        return (\n            <div className=\"analytics-container\">\n                <Charts />\n            </div>\n        );\n    }\n}\n\nexport default Analytics;   ","import React, { Component } from 'react';\nimport Analytics from '../analytics/Analytics';\n\nclass Result extends Component {\n    render() {\n        const result = this.props.result();\n        return (\n            <div>\n                <h5>{result.title}</h5>\n                <p>{result.desc}</p>\n                <Analytics />\n            </div>\n        );\n    }\n}\n\nexport default Result;","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { observable, action } from \"mobx\";\nimport Questions from './Questions';\nimport Result from '../Results/Result';\nimport '../../css/quiz.css';\n\n@inject('store')\n@observer\nclass Quiz extends Component {\n\n    @observable userAnswers = [];\n    @observable finalResult = null;\n\n    @action addAnswer = (answer) => this.userAnswers.push(answer)\n\n    @action calcFinalResult = async () => {\n        let greatestOccurring = { val: this.userAnswers[0], occ: 0 };\n\n        for (let i = 0; i < this.userAnswers.length; i++) {\n            let count = 1;\n            for (let j = i + 1; j < this.userAnswers.length; j++) if (this.userAnswers[j] === this.userAnswers[i]) count++;\n            if (count > greatestOccurring.occ) greatestOccurring = { val: this.userAnswers[i], occ: count }\n        }\n\n        this.finalResult = greatestOccurring.val;\n        let result = this.props.store.quiz.results[this.finalResult-1]\n        await this.props.store.saveUserResults(result.score)\n    }\n\n    getResult = () => this.props.store.quiz.results[this.finalResult-1]\n\n    componentDidMount() {\n        let quizID = this.props.id\n        this.props.store.getCurrentQuizz(quizID)\n    }\n\n    showQuiz(quiz) {\n        return (\n            <div className=\"quiz\">\n                <h3>{quiz.title}</h3>\n                <br />\n                {this.finalResult ? <Result result={this.getResult} /> : <Questions addAnswer={this.addAnswer} endQuiz={this.calcFinalResult} />}\n            </div>\n        )\n    }\n\n    render() {\n        const quiz = this.props.store.quiz\n        return quiz ? this.showQuiz(quiz) : null\n    }\n}\n\nexport default Quiz;","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Link } from 'react-router-dom';\nimport QuizBox from './QuizBox';\nimport { observable, action } from \"mobx\";\nimport Quiz from '../Quiz/Quiz'\nimport '../../css/QuizScreen.css';\n\n@inject('store')\n@observer\nclass QuizzesScreen extends Component {\n\n    @observable selectedQuiz = null;\n\n    componentDidMount = () => {\n        this.props.store.getQuizzes()\n    }\n\n    @action selectQuiz = (quizId) => {\n        this.selectedQuiz = quizId;\n    }\n\n    render() {\n        const quizzes = this.props.store.quizzes\n        if (!this.selectedQuiz)\n            return (\n                <div>\n                    <h4 className=\"title-quizzes\"> Our Quizzes </h4>\n                    <div className='quiz-row'>\n                        {quizzes ? quizzes.map((q, i) => <QuizBox selectQuiz={this.selectQuiz} key={q._id} index={i} quiz={q} />) : null}\n                    </div>\n                    <br></br>\n                    <Link to=\"/create-quiz\"><button type=\"button\" className='addQuiz btn btn-secondary '> <i className='fas fa-plus'></i> add a quiz  </button></Link>\n                </div>\n            )\n        else return <Quiz id={this.selectedQuiz} />\n    }\n}\nexport default QuizzesScreen;\n","import React, { Component } from 'react';\nimport '../../css/landing.css';\nimport { observable, action } from \"mobx\";\nimport { observer, inject } from 'mobx-react';\nimport { Redirect } from 'react-router';\n\n\n@inject('store')\n@observer\nclass LandingPage extends Component {\n    @observable userName = '';\n    @observable redirect = false;\n\n    @action inputChange = (e) => this.userName = e.target.value;\n\n    login = async () => {\n        if (this.userName) {\n            await this.props.store.addUser(this.userName)\n            this.redirect = true;\n        }\n        else alert(\"Please enter a username :)\")\n    }\n\n    render() {\n        if (this.redirect) {\n            return <Redirect push to=\"/home\" />;\n        }\n        return (\n            <div className=\"container\">\n                <h1 className=\"first-title\">QUIZZA</h1>\n                <div className=\"input-enter\">\n                    <span className=\"username\"> Username:</span> <input className=\"input-username\" type=\"text\" name=\"userName\" onChange={this.inputChange} value={this.userName} />\n                    <br />\n                    <input className=\"LoginButton\" type=\"button\" onClick={this.login} value=\"Login\" />\n                    <span></span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport '../../css/Homepage.css';\nimport { Link } from 'react-router-dom';\n\nclass HomePage extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>QUIZZA</h1>\n                <p className=\"opening\">Welcome to Quizza, Are you ready to start the fun? <br />\n                    You have tree options in fornt of you.. you just need to choose one and start playing!!\n             </p>\n                <div className=\"apps\">\n                    <Link to=\"/quiz\"><div className=\"app quiz\">\n                        <h2 className=\"header\">TEST YOURSELF</h2><br />\n                        <span className=\"icon\"><i className=\"fas fa-question\"></i></span>\n                        <div className=\"describe\">Join us, and get to know yourself better! \n                            Also you can creat any quiz on your mind!</div>\n                    </div></Link>\n                    <div className=\"app cloud\">\n                        <h2 className=\"header\">CLOUD GAME</h2><br />\n                        <span className=\"icon\"><i className=\"fas fa-cloud\"></i></span>\n                        <div className=\"describe\">Pick your quote for today by our game!</div>\n                    </div>\n                    <Link to=\"/horoscope\"><div className=\"app horoscope\">\n                        <h2 className=\"header\">WHAT YOUR HOROSCOPE?</h2><br />\n                        <span className=\"icon\"><i className=\"far fa-star\"></i></span>\n                        <div className=\"describe\">What about your luck today? You will never know but we can give you some idea.</div>\n                    </div></Link>\n                </div>\n            </div>);\n    }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport '../../css/createQuizForm.css';\n\n@observer\nclass QuestionForm extends Component {\n    @observable questions = [];\n    @observable currentQuestion = { text: '', answer1: '', answer2: '', answer3: '', answer4: '' }\n\n    inputChange = (e) => this.currentQuestion[e.target.name] = e.target.value;\n\n    addQuestion = () => {\n        if ((this.questions.length < 10)\n            && (this.currentQuestion.text)\n            && (this.currentQuestion.answer1)\n            && (this.currentQuestion.answer2)\n            && (this.currentQuestion.answer3)\n            && (this.currentQuestion.answer4)) {\n            this.questions.push(this.currentQuestion)\n            this.currentQuestion = { text: '', answer1: '', answer2: '', answer3: '', answer4: '' }\n        }\n    }\n\n    showNewQuestionSection = () => {\n        return (\n            <div>\n                <input className=\"input-question\" type=\"text\" placeholder=\"Question\" name=\"text\" value={this.currentQuestion.text} onChange={this.inputChange} /> <br />\n                <input className=\"input-question\" type=\"text\" placeholder=\"Answer 1\" name=\"answer1\" value={this.currentQuestion.answer1} onChange={this.inputChange} /> <br />\n                <input className=\"input-question\" type=\"text\" placeholder=\"Answer 2\" name=\"answer2\" value={this.currentQuestion.answer2} onChange={this.inputChange} /> <br />\n                <input className=\"input-question\" type=\"text\" placeholder=\"Answer 3\" name=\"answer3\" value={this.currentQuestion.answer3} onChange={this.inputChange} /> <br />\n                <input className=\"input-question\" type=\"text\" placeholder=\"Answer 4\" name=\"answer4\" value={this.currentQuestion.answer4} onChange={this.inputChange} /> <br />\n                <input className=\"plus\" type=\"button\" value=\"+\" onClick={this.addQuestion} />\n            </div>\n        )\n    }\n\n    showExistingQuestions = (showNew) => {\n        return (\n            <div>\n                {showNew ? this.showNewQuestionSection() : <p>Sorry, no more questions are available! :(</p>}\n                {this.questions.map((q, i) => (\n                    <div key={i}>\n                        <input type=\"text\" defaultValue={q.text} /> <br />\n                        <input type=\"text\" defaultValue={q.answer1} /> <br />\n                        <input type=\"text\" defaultValue={q.answer2} /> <br />\n                        <input type=\"text\" defaultValue={q.answer3} /> <br />\n                        <input type=\"text\" defaultValue={q.answer4} /> <br />\n                    </div>\n                ))}\n            </div>\n        )\n    }\n\n    createNewQuestion = () => {\n        if (this.questions.length === 10) return this.showExistingQuestions(false)\n        if (this.questions.length) return this.showExistingQuestions(true)\n        return this.showNewQuestionSection()\n    }\n\n    saveQuestions = () => {\n        if (this.questions.length >= 5) {\n            let formattedQuestions = [];\n            for (let q of this.questions) {\n                let question = {\n                    text: q.text,\n                    answers: [\n                        { text: q.answer1, score: 1 },\n                        { text: q.answer2, score: 2 },\n                        { text: q.answer3, score: 3 },\n                        { text: q.answer4, score: 4 }\n                    ]\n                }\n                formattedQuestions.push(question)\n            }\n            this.props.saveQuestions(formattedQuestions)\n        }\n        else alert('Please enter at least 5 questions...')\n    }\n\n    render() {\n        return (\n            <div className=\"question-form\">\n                <h4 className=\"result-title\">Enter questions and answers</h4>\n                <p>(please note that answer #1 must always fit result type #1 and so on)</p>\n                {this.createNewQuestion()}\n                <input className=\"save-button\" type=\"button\" value=\"save questions\" onClick={this.saveQuestions} />\n            </div>\n        )\n    }\n}\n\nexport default QuestionForm;","import React, { Component } from \"react\";\nimport '../../css/createQuizForm.css';\n\nclass ResultsForm extends Component {\n    results = { title1: '', desc1: '', title2: '', desc2: '', title3: '', desc3: '', title4: '', desc4: '', }\n\n    saveResults = () => {\n        if ((this.results.title1)\n            && (this.results.desc1)\n            && (this.results.title2)\n            && (this.results.desc2)\n            && (this.results.title3)\n            && (this.results.desc3)\n            && (this.results.title4)\n            && (this.results.desc4)) {\n            let formattedResults = [\n                { score: 1, title: this.results.title1, desc: this.results.desc1 },\n                { score: 2, title: this.results.title2, desc: this.results.desc2 },\n                { score: 3, title: this.results.title3, desc: this.results.desc3 },\n                { score: 4, title: this.results.title4, desc: this.results.desc4 }\n            ];\n            this.props.saveResults(formattedResults)\n        } else alert(\"please create all the results!\")\n    }\n\n    inputChange = (e) => this.results[e.target.name] = e.target.value\n\n    render() {\n        return (\n            <div className=\"results-form\">\n                <h4 className=\"result-title\">Enter the final result types:</h4>\n                <div className=\"result-box result1\">\n                    <div>1</div>\n                    Title: <input type=\"text\" name=\"title1\" placeholder=\"title\" onChange={this.inputChange} /> <br />\n                    Description: <input type=\"text\" name=\"desc1\" placeholder=\"description\" onChange={this.inputChange} />\n                </div>\n                <div className=\"result-box result2\">\n                    <div>2</div>\n                    Title: <input type=\"text\" name=\"title2\" placeholder=\"title\" onChange={this.inputChange} /> <br />\n                    Description: <input type=\"text\" name=\"desc2\" placeholder=\"description\" onChange={this.inputChange} />\n                </div>\n                <div className=\"result-box result3\">\n                    <div>3</div>\n                    Title: <input type=\"text\" name=\"title3\" placeholder=\"title\" onChange={this.inputChange} /> <br />\n                    Description: <input type=\"text\" name=\"desc3\" placeholder=\"description\" onChange={this.inputChange} />\n                </div>\n                <div className=\"result-box result4\">\n                    <div>4</div>\n                    Title: <input type=\"text\" name=\"title4\" placeholder=\"title\" onChange={this.inputChange} /> <br />\n                    Description: <input type=\"text\" name=\"desc4\" placeholder=\"description\" onChange={this.inputChange} />\n                </div>\n                <br></br>\n                <input className=\"save-button\" type=\"button\" value=\"save results\" onClick={this.saveResults} />\n            </div>\n        )\n    }\n}\n\nexport default ResultsForm;","import React, { Component } from 'react';\n// import { observable } from 'mobx';\nimport '../../css/createQuizForm.css';\nimport QuestionForm from './QuestionForm';\nimport ResultsForm from './ResultsForm';\nimport { inject } from 'mobx-react';\n\n@inject('store')\nclass CreateForm extends Component {\n    formInputs = {\n        title: \"\",\n        description: \"\"\n    }\n\n    quizQuestions = null;\n    quizResults = null;\n\n    inputChange = (e) => this.formInputs[e.target.name] = e.target.value;\n\n    saveQuestions = (questions) => this.quizQuestions = questions;\n\n    saveResults = (results) => this.quizResults = results;\n\n    saveQuiz = () => {\n        if ((this.formInputs.title)\n            && (this.formInputs.description)\n            && (this.quizQuestions)\n            && (this.quizResults)) {\n            const header = this.formInputs\n            const questions = this.quizQuestions\n            const results = this.quizResults\n            this.props.store.saveQuiz(header, questions, results)\n        } else alert('Please make sure to provide all fields!')\n    }\n\n    render() {\n        return (\n            <div className=\"create-form\">\n                <h2 className=\"creat-title\">Create your own Quiz!</h2>\n                <div>\n                    <h3>Title:</h3>\n                    <br />\n                    <input type=\"text\" name=\"title\" onChange={this.inputChange} placeholder=\"title\" />\n                    <br />\n                </div>\n                <div>\n                    <h3> Description:</h3>\n                    <br />\n                    <textarea name=\"description\" onChange={this.inputChange} rows=\"4\" cols=\"40\" placeholder=\"describe your quiz...\" />\n                    <br/>\n                </div>\n                <ResultsForm saveResults={this.saveResults} />\n                <QuestionForm saveQuestions={this.saveQuestions} />\n                <input className=\"save-button\" type=\"button\" value=\"CREATE QUIZ!!\" onClick={this.saveQuiz} />\n            </div>\n        )\n    }\n}\n\nexport default CreateForm;","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { observable, action } from \"mobx\";\nimport '../../css/horoscope.css';\n\n@observer\nclass Horoscope extends Component {\n    @observable horoscopeData = null\n\n    @observable userSign = \"Aries\"\n\n    @action changeInput = (e) => this.userSign=e.target.value;\n    \n    @action getMyHoroscope = () => {\n        const URL = 'https://aztro.sameerkumar.website/?sign=' + this.userSign + '&day=today';\n        fetch(URL, {\n            method: 'POST'\n        }).then(response => response.json())\n            .then(json => { \n                this.horoscopeData = json;\n                this.horoscopeData.sign = this.userSign;\n            });\n    }\n\n    showHoroscope = () => {\n        return (\n            <div className=\" all-horoscope\">\n                <h1 className=\"horoscope-title\">{this.horoscopeData.sign}</h1>\n                <p>Current Date: {this.horoscopeData.current_date} <br /></p>\n                <p>Compatibility: {this.horoscopeData.compatibility} <br /></p>\n                <p>Lucky Number: {this.horoscopeData.lucky_number} <br /></p>\n                <p>Lucky Time: {this.horoscopeData.lucky_time} <br /></p>\n                <p>Color: {this.horoscopeData.color} <br /></p>\n                <p>Date Range: {this.horoscopeData.date_range} <br /></p>\n                <p>Mood: {this.horoscopeData.mood} <br /></p>\n                <p>Description: {this.horoscopeData.description} <br /></p>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"dropdown\">\n                <select  className=\"btn btn-secondary dropdown-toggle select-button\" value={this.userSign} onChange={this.changeInput}>\n                    <option className=\"dropdown-item\">Aries</option>\n                    <option className=\"dropdown-item\">Taurus</option>\n                    <option className=\"dropdown-item\">Gemini</option>\n                    <option className=\"dropdown-item\">Cancer</option>\n                    <option className=\"dropdown-item\">Leo</option>\n                    <option className=\"dropdown-item\">Virgo</option>\n                    <option className=\"dropdown-item\">Libra</option>\n                    <option className=\"dropdown-item\">Scorpio</option>\n                    <option className=\"dropdown-item\">Sagittarius</option>\n                    <option className=\"dropdown-item\">Capricorn</option>\n                    <option className=\"dropdown-item\">Aquarius</option>\n                    <option className=\"dropdown-item\">Pisces</option>\n                </select>\n                <input className=\"btn btn-secondary dropdown-toggle horoscop-button\" type='button' value='get my horoscope!' onClick={this.getMyHoroscope}/>\n                {this.horoscopeData ? this.showHoroscope() : null}\n            </div>\n        );\n    }\n}\n\nexport default Horoscope;","import React, { Component } from 'react';\nimport WordCloud from 'wordcloud';\n\n\nclass Cloud extends Component {\n\n    db = [\n        {\"word\": \"sad\", \"size\":4},\n        {\"word\": \"happy\", \"size\":5},\n        {\"word\": \"beautiful\", \"size\":6},\n        {\"word\": \"day\", \"size\":7},\n        {\"word\": \"strong\", \"size\":8},\n        {\"word\": \"lovely\", \"size\":8},\n        {\"word\": \"inspired\", \"size\":7},\n        {\"word\": \"believe\", \"size\":6},\n        {\"word\": \"confidence\", \"size\":5},\n        {\"word\": \"success\", \"size\":4},\n        {\"word\": \"dream\", \"size\":4},\n        {\"word\": \"do it\", \"size\":5},\n        {\"word\": \"hard work\", \"size\":6},\n        {\"word\": \"journey\", \"size\":7},\n        {\"word\": \"forward\", \"size\":8},\n        {\"word\": \"future\", \"size\":8},\n        {\"word\": \"world\", \"size\":7},\n        {\"word\": \"no limits\", \"size\":6},\n        {\"word\": \"greater\", \"size\":5},\n    ]\n\n    list = [];\n\n    componentDidMount() {\n        for (let i in this.db) {\n            this.list.push([this.db[i][\"word\"], this.db[i][\"size\"]])\n        }\n        WordCloud.miniumFontSize = '50px'\n        WordCloud(this.refs['my-canvas'],\n        {\n            list: this.list,\n            weightFactor: 5,\n            fontFamily: 'Times, serif',\n            rotationSteps: 2,\n            backgroundColor: '#ffe0e0',\n            wait: 350,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <canvas className=\"cloud\" ref=\"my-canvas\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Cloud;","import React, { Component } from 'react';\nimport NavBar from './components/General/NavBar';\nimport { inject, observer } from 'mobx-react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport QuizzesScreen from './components/Quiz_Catalog/QuizzesScreen';\nimport LandingPage from './components/Landing/LandingPage';\nimport HomePage from './components/Landing/HomePage';\nimport CreateQuiz from './components/Create/CreateQuizForm';\nimport './App.css';\nimport Horoscope from './components/Horoscope/Horoscope';\nimport Cloud from './components/Cloud/Cloud';\n\n@inject('store')\n@observer\nclass App extends Component {\n  navbarHide = () => {\n    if(this.props.store.user) return <NavBar />\n    return null;\n  }\n  \n  render() {\n    return (\n    <Router>\n      <div className=\"App\">\n      {this.navbarHide()}\n        <Route path=\"/\" exact render={() => <LandingPage />} />\n        <Route path=\"/quiz\" exact render={() => <QuizzesScreen />} />\n        <Route path=\"/create-quiz\" exact render={()=> <CreateQuiz />} />\n        <Route path=\"/home\" exact render={()=> <HomePage />} />\n        <Route path=\"/horoscope\" exact render={()=> <Horoscope />} />\n        <Route path=\"/cloud\" exact render={()=> <Cloud />} />\n      </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action } from 'mobx';\nimport axios from 'axios';\n\nclass QuizStore {\n    @observable user = JSON.parse(localStorage.getItem('user')) || null;\n    @observable quizzes = null;\n    @observable quiz = null;\n    @observable isLoading = true;\n\n    @action addUser = async (userName) => {\n        const newUser = await axios.get('/user/' + userName);\n        this.user = newUser.data;\n        localStorage.setItem('user', JSON.stringify(this.user));\n    }\n\n    @action logout = () => {\n        this.user = null;\n        localStorage.setItem('user', JSON.stringify(null))\n    }\n\n    @action getQuizzes = async ()=> {\n        const allQuizzes = await axios.get('/quizzes');\n        this.quizzes = allQuizzes.data;\n    }\n\n    @action getCurrentQuizz = async (quizID)=> { \n        const currentQuizz = await axios.get('/quiz/' + quizID);\n        this.quiz = currentQuizz.data;\n    }\n\n    @action saveQuiz = async (header, questions, results)=> {\n        let newQuiz = {\n            title: header.title,\n            desc: header.description,\n            questions: questions,\n            results: results\n        }\n        let q = await axios.post('/quiz', newQuiz)\n        console.log(q.data);\n    }\n    \n    @action saveUserResults = async (score) => {\n        let userQuiz = { qID: this.quiz._id, score: score }\n        let user = await axios.post('/user/addQuiz/' + this.user._id, userQuiz)\n        this.user = user.data;\n    }\n}\n\nconst store = new QuizStore();\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/quizStore';\nimport { Provider } from 'mobx-react';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}