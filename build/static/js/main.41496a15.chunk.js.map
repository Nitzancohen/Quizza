{"version":3,"sources":["components/General/NavBar.js","components/Quiz_Catalog/BoxTest.js","components/Quiz_Catalog/QuizBox.js","components/Quiz/Answers.js","components/Quiz/Question.js","components/Quiz/Questions.js","components/General/MyLoader.js","components/analytics/charts/PieCharts.js","components/analytics/Chart.js","components/analytics/Charts.js","components/analytics/Analytics.js","components/Results/Result.js","components/Quiz/Quiz.js","components/Quiz_Catalog/QuizzesScreen.js","components/General/bubbles.js","components/Landing/LandingPage.js","components/Landing/HomePage.js","components/Create/QuestionForm.js","components/Create/ResultsForm.js","components/Create/CreateQuizForm.js","components/Horoscope/Horoscope.js","components/Cloud/Cloud.js","App.js","serviceWorker.js","store/quizStore.js","index.js"],"names":["NavBar","inject","observer","this","redirect","react_default","a","createElement","Redirect","push","to","className","id","props","store","user","userName","Link","onClick","logout","Component","observable","action","_this2","BoxTest","startQuiz","_this","selectQuiz","quiz","_id","type","data-toggle","data-target","title","desc","QuizBox","Quiz_Catalog_BoxTest","Answers","answers","questions","index","map","answer","key","name","score","value","text","onChange","changeAnswer","htmlFor","e","_this3","parseInt","target","checkAnswer","Question","question","Quiz_Answers","Questions","qIndex","length","Quiz_Question","nextquestion","addAnswer","endQuiz","alert","MyLoader","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","wrapperClass","loaded","children","react_loader_spinner_default","color","PieCharts","PieChart","width","height","onMouseEnter","onPieEnter","Tooltip","Pie","data","cx","cy","innerRadius","outerRadius","fill","paddingAngle","label","entry","Cell","colors","Chart","getData","_callee","quizID","users","regenerator_default","wrap","_context","prev","next","axios","get","sent","sortResults","stop","results","r","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","quizzes","filter","qID","err","return","componentDidMount","getChart","chartType","charts_PieCharts","console","error","General_MyLoader","Charts","getCharts","pieDataKey","pieNameKey","c","analytics_Chart","url","layout","Analytics","analytics_Charts","Result","tweetReady","tweet","titleForTweet","result","replace","encodeURIComponent","window","open","facebookReady","analytics_Analytics","Quiz","getResult","finalResult","match","params","getCurrentQuizz","Results_Result","Quiz_Questions","calcFinalResult","showQuiz","userAnswers","greatestOccurring","count","j","val","occ","saveUserResults","QuizzesScreen","getQuizzes","concat","selectedQuiz","q","Quiz_Catalog_QuizBox","quizId","Bubbels","LandingPage","login","addUser","bubbles","inputChange","HomePage","QuestionForm","currentQuestion","addQuestion","answer1","answer2","answer3","answer4","showNewQuestionSection","placeholder","showExistingQuestions","showNew","defaultValue","createNewQuestion","saveQuestions","formattedQuestions","ResultsForm","title1","desc1","title2","desc2","title3","desc3","title4","desc4","saveResults","formattedResults","CreateForm","formInputs","description","quizQuestions","quizResults","saveQuiz","header","rows","cols","Create_ResultsForm","Create_QuestionForm","Horoscope","showHoroscope","horoscopeData","sign","current_date","date_range","compatibility","lucky_number","mood","userSign","changeInput","getMyHoroscope","URL","fetch","method","then","response","json","Cloud","db","selectedCategories","getCategories","size","Math","floor","random","cat","wordInput","log","startGame","cloudCategories","WordCloud","document","getElementById","list","weightFactor","fontFamily","rotationSteps","backgroundColor","setTimeout","showCloud","gameStarted","printCloudGame","checkWord","gueesed","printQuote","res","ref","App","navbarHide","General_NavBar","BrowserRouter","Route","path","exact","render","Landing_LandingPage","Quiz_Catalog_QuizzesScreen","CreateQuizForm","Landing_HomePage","components_Horoscope_Horoscope","components_Cloud_Cloud","_ref","components_Quiz_Quiz","Boolean","location","hostname","JSON","parse","localStorage","getItem","newUser","setItem","stringify","_callee2","allQuizzes","_context2","_callee3","currentQuizz","_context3","_this4","_callee4","newQuiz","_context4","post","_callee5","userQuiz","_context5","_this5","ReactDOM","index_module","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ovBAwCeA,GAjCdC,aAAO,WACPC,2ZAUO,OAAIC,KAAKC,SACEC,GAAAC,EAAAC,cAACC,GAAA,EAAD,CAAUC,MAAI,EAACC,GAAG,MAGzBL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,QACXN,GAAAC,EAAAC,cAAA,QAAMI,UAAU,cAAhB,UAGAN,GAAAC,EAAAC,cAAA,QAAMK,GAAG,YAAT,UAA4BT,KAAKU,MAAMC,MAAMC,KAAKC,SAAlD,KACAX,GAAAC,EAAAC,cAAA,QAAMI,UAAU,eACZN,GAAAC,EAAAC,cAACU,GAAA,EAAD,CAAMP,GAAG,QAAQC,UAAU,YAAWN,GAAAC,EAAAC,cAAA,KAAGI,UAAU,gBAAkBN,GAAAC,EAAAC,cAAA,uBACrEF,GAAAC,EAAAC,cAACU,GAAA,EAAD,CAAMP,GAAG,IAAIC,UAAU,WAAWO,QAASf,KAAKgB,QAChDd,GAAAC,EAAAC,cAAA,KAAGI,UAAU,uBAAyBN,GAAAC,EAAAC,cAAA,mCAtBzCa,qDAChBC,+EAAsB,0CAEtBC,0FAAgB,WACbC,EAAKV,MAAMC,MAAMK,SACjBI,EAAKnB,UAAW,uCCmBToB,WA7BdvB,aAAO,WACPC,6NAGGuB,UAAY,kBAAMC,EAAKb,MAAMc,WAAWD,EAAKb,MAAMe,KAAKC,gFAGpD,OACIxB,GAAAC,EAAAC,cAAA,OAAKK,GAAG,QAAQD,UAAU,gBACtBN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACXN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,WAAWmB,KAAK,SAASlB,GAAG,eAAemB,cAAY,QAAQC,cAAY,YAAYd,QAASf,KAAKsB,WACnHpB,GAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACXN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,SACfN,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,MAAII,UAAU,aAAd,IAA4BR,KAAKU,MAAMe,KAAKK,MAA5C,KACA5B,GAAAC,EAAAC,cAAA,aAAKJ,KAAKU,MAAMe,KAAKM,KAArB,mBAflBd,uBCWPe,GAbdlC,aAAO,WACPC,qMAIO,OACIG,GAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,GAAAC,EAAAC,cAAC6B,GAAD,CAAST,WAAYxB,KAAKU,MAAMc,WAAYC,KAAMzB,KAAKU,MAAMe,eALvDR,mDC0BPiB,GA5BdpC,aAAO,WACPC,+ZAUY,IAAAqB,EAAApB,KACCmC,EAAUnC,KAAKU,MAAMC,MAAMc,KAAKW,UAAUpC,KAAKU,MAAM2B,OAAOF,QAClE,OACIjC,GAAAC,EAAAC,cAAA,OAAKI,UAAU,WACV2B,EAAQG,IAAI,SAACC,GACV,OACIrC,GAAAC,EAAAC,cAAA,OAAKI,UAAU,SAASgC,IAAKD,EAAOb,KAChCxB,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,QAAQc,KAAK,SAAShC,GAAI8B,EAAOG,MAAOF,IAAKD,EAAOG,MAAOC,MAAOJ,EAAOK,KAAMC,SAAUzB,EAAK0B,eAC1G5C,GAAAC,EAAAC,cAAA,SAAO2C,QAASR,EAAOG,OAAQH,EAAOK,iBAjB5C3B,mDAEjBC,+EAAoB,gDAEpBC,0FAAsB,SAAC6B,GACpBC,EAAKV,OAASW,SAASF,EAAEG,OAAO1C,IAChCwC,EAAKvC,MAAM0C,YAAYH,EAAKV,yBCQrBc,UAfdvD,aAAO,WACPC,qMAIO,IAAIuD,EAAWtD,KAAKU,MAAMC,MAAMc,KAAKW,UAAUpC,KAAKU,MAAM2B,OAC1D,OACInC,GAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,GAAAC,EAAAC,cAAA,MAAII,UAAU,cAAc8C,EAASV,MACrC1C,GAAAC,EAAAC,cAACmD,GAAD,CAASlB,MAAOrC,KAAKU,MAAM2B,MAAOe,YAAapD,KAAKU,MAAM0C,sBAPnDnC,uBC2CRuC,GA5Cd1D,aAAO,WACPC,gVAMGqD,YAAc,SAACb,GACPA,IAAQhB,EAAKgB,OAASA,6IAsB1B,IAAIkB,EAASzD,KAAKqC,MAAM,EACpBqB,EAAS1D,KAAKU,MAAMC,MAAMc,KAAKW,UAAUsB,OAC7C,OACIxD,GAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,GAAAC,EAAAC,cAACuD,GAAD,CAAUtB,MAAOrC,KAAKqC,MAAOG,IAAKxC,KAAKqC,MAAOe,YAAapD,KAAKoD,cACpElD,GAAAC,EAAAC,cAAA,QAAMI,UAAU,cAAciD,EAA9B,IAAuCC,GACnCxD,GAAAC,EAAAC,cAAA,YACIF,GAAAC,EAAAC,cAAA,YAAMF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,SAASnB,UAAU,cAAcmC,MAAM,OAAO5B,QAASf,KAAK4D,yBAnC1E3C,kDACnBC,+EAAmB,0CACnBA,+EAAoB,gDAOpBC,0FAAsB,WACnB,GAAIC,EAAKmB,OAAQ,CACb,IAAImB,EAAStC,EAAKV,MAAMC,MAAMc,KAAKW,UAAUsB,OACzCtC,EAAKiB,MAAQqB,EAAS,GACtBtC,EAAKV,MAAMmD,UAAUzC,EAAKmB,QAC1BnB,EAAKmB,OAAS,EACdnB,EAAKiB,UAGLjB,EAAKV,MAAMmD,UAAUzC,EAAKmB,QAC1BnB,EAAKV,MAAMoD,gBAIfC,MAAM,gGCTHC,WAlBf,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,GAAA,EAAAD,CAAAlE,KAAAgE,GAAAE,OAAAE,GAAA,EAAAF,CAAAlE,KAAAkE,OAAAG,GAAA,EAAAH,CAAAF,GAAAM,MAAAtE,KAAAuE,YAAA,OAAAL,OAAAM,GAAA,EAAAN,CAAAF,EAAAC,GAAAC,OAAAO,GAAA,EAAAP,CAAAF,EAAA,EAAAxB,IAAA,SAAAG,MAAA,WAEQ,OACIzC,GAAAC,EAAAC,cAAA,OAAKI,UAAWR,KAAKU,MAAMgE,cAEtB1E,KAAKU,MAAMiE,OACRzE,GAAAC,EAAAC,cAAA,WAAMJ,KAAKU,MAAMkE,UAEhB1E,GAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZN,GAAAC,EAAAC,cAACyE,GAAA1E,EAAD,CAAQwB,KAAK,OAAOmD,MAAM,6BATlDd,EAAA,CAA8B/C,uDCwBf8D,GAxBdjF,aAAO,WACPC,qMAEY,IAAAwB,EAAAvB,KACL,OACIE,GAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAUC,MAAO,IAAKC,OAAQ,IAAKC,aAAcnF,KAAKoF,YAClDlF,GAAAC,EAAAC,cAACiF,GAAA,EAAD,MACAnF,GAAAC,EAAAC,cAACkF,GAAA,EAAD,CACIC,KAAMvF,KAAKU,MAAM6E,KACjBC,GAAI,IACJC,GAAI,IACJC,YAAa,GACbC,YAAa,GACbC,KAAK,UACLC,aAAc,EACdC,OAAK,GAEJ9F,KAAKU,MAAM6E,KAAKjD,IAAI,SAACyD,EAAO1D,GAAR,OAAkBnC,GAAAC,EAAAC,cAAC4F,GAAA,EAAD,CAAMJ,KAAMrE,EAAKb,MAAMuF,OAAO5D,EAAQd,EAAKb,MAAMuF,OAAOvC,qBAf3FzC,sBC4DTiF,WAzDdpG,aAAO,WACPC,+UAKGoG,+BAAU,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAC,GAAApG,EAAAqG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACFN,EAAS9E,EAAKb,MAAMC,MAAMc,KAAKC,IAD7B+E,EAAAE,KAAA,EAEYC,KAAMC,IAAI,iBAAmBR,GAFzC,OAEFC,EAFEG,EAAAK,KAGNvF,EAAKwF,YAAYT,EAAMf,MACvBhE,EAAKoD,QAAS,EAJR,wBAAA8B,EAAAO,SAAAZ,EAAApG,WAOV+G,YAAc,SAACT,GACX/E,EAAKgE,KAAO,CACR,CAAE9C,KAAM,GAAIE,MAAO,GACnB,CAAEF,KAAM,GAAIE,MAAO,GACnB,CAAEF,KAAM,GAAIE,MAAO,GACnB,CAAEF,KAAM,GAAIE,MAAO,IAGTpB,EAAKb,MAAMC,MAAMc,KAAKwF,QAC5B3E,IAAI,SAAC4E,EAAGC,GAAJ,OAAU5F,EAAKgE,KAAK4B,GAAG1E,KAAOyE,EAAEpF,QATvB,IAAAsF,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAWrB,QAAAC,EAAAC,EAAiBnB,EAAjBoB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAd,QAAAiB,MAAAR,GAAA,EAAwB,KAChB1E,EADgB8E,EAAA7E,MACHkF,QAAQC,OAAO,SAAArG,GAAI,OAAIA,EAAKsG,MAAQxG,EAAKb,MAAMC,MAAMc,KAAKC,MAAK,GAAGgB,MACnFnB,EAAKgE,KAAK7C,EAAQ,GAAGC,SAbJ,MAAAqF,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,OAiBzBY,kBAAoB,WAChB3G,EAAK4E,aAGTgC,SAAW,WACP,OAAQ5G,EAAKb,MAAM0H,WACf,IAAK,MACD,OACIlI,GAAAC,EAAAC,cAACiI,GAAD,CAAW9C,KAAMhE,EAAKgE,KAAMU,OAAQ1E,EAAKb,MAAMuF,SAEvD,QACIqC,QAAQC,MAAM,sGAMtB,OACIrI,GAAAC,EAAAC,cAACoI,GAAD,CAAU7D,OAAQ3E,KAAK2E,OAAQD,aAAa,cAExCxE,GAAAC,EAAAC,cAAA,KAAGI,UAAU,aAAb,gEACCR,KAAKuF,KAAOvF,KAAKmI,WAAa,aAjD3BlH,iDACfC,+EAAkB,6CAClBA,+EAAoB,mBCiCVuH,GA1Cd3I,aAAO,WACPC,6NAIG2I,UAAY,WAYR,MAVe,CACX,CACIjI,GAAI,qBACJqB,MAAO,sBACPsG,UAAW,MACXnC,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1C0C,WAAY,UACZC,WAAY,oFAOpB,OACI1I,GAAAC,EAAAC,cAAA,OAAKI,UAAU,mCACVR,KAAK0I,YAAYpG,IAAI,SAAAuG,GAAC,OACnB3I,GAAAC,EAAAC,cAAC0I,GAAD,CACItG,IAAKqG,EAAEpI,GACPA,GAAIoI,EAAEpI,GACNqB,MAAO+G,EAAE/G,MACTiH,IAAKF,EAAEE,IACPX,UAAWS,EAAET,UACbtD,MAAO+D,EAAE/D,MACTmB,OAAQ4C,EAAE5C,OACV+C,OAAQH,EAAEG,OACVL,WAAYE,EAAEF,WACdC,WAAYC,EAAED,uBAhCjB3H,sBCSNgI,yLARP,OACI/I,GAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACXN,GAAAC,EAAAC,cAAC8I,GAAD,cALQjI,cCkCTkI,yNAhCXC,WAAa,WACT,IACIC,EAEAC,EAHS/H,EAAKb,MAAM6I,SAGGzH,MAAM0H,QAAQ,iBAAkB,IAC3DH,EAAQI,mBAAmBH,GAC3BI,OAAOC,KAAK,yCAA2CN,EAAO,aAGlEO,cAAgB,WACZ,IACI9H,EACJA,EAFaP,EAAKb,MAAM6I,SAETzH,MAAM0H,QAAQ,iBAAkB,IAE/CE,OAAOC,KAAK,wFAAoE7H,EAAO,iBAAkB,mGAIzG,IAAIyH,EAASvJ,KAAKU,MAAM6I,SACxB,OACIrJ,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,MAAII,UAAU,eAAe+I,EAAOzH,OACpC5B,GAAAC,EAAAC,cAAA,KAAGI,UAAU,cAAc+I,EAAOxH,MAClC7B,GAAAC,EAAAC,cAAA,SAAOI,UAAU,6BAA6BmB,KAAK,SAASgB,MAAM,mBAAmB5B,QAASf,KAAKoJ,aACnGlJ,GAAAC,EAAAC,cAAA,SAAOI,UAAU,8BAA8BmB,KAAK,SAASgB,MAAM,oBAAoB5B,QAASf,KAAK4J,gBACrG1J,GAAAC,EAAAC,cAAA,WACAF,GAAAC,EAAAC,cAACyJ,GAAD,cA5BK5I,eCsDN6I,WAlDdhK,aAAO,WACPC,ydAsBGgK,UAAY,kBAAMxI,EAAKb,MAAMC,MAAMc,KAAKwF,QAAQ1F,EAAKyI,YAAc,yFAG/D,IAAI3D,EAASrG,KAAKU,MAAMuJ,MAAMC,OAAOzJ,GACrCT,KAAKU,MAAMC,MAAMwJ,gBAAgB9D,oCAG5B5E,GACL,OACIvB,GAAAC,EAAAC,cAAA,OAAKI,UAAU,QACXN,GAAAC,EAAAC,cAAA,MAAII,UAAU,mBAAmBC,GAAG,mBAAmBgB,EAAKK,OAC5D5B,GAAAC,EAAAC,cAAA,WACCJ,KAAKgK,YAAc9J,GAAAC,EAAAC,cAACgK,GAAD,CAAQb,OAAQvJ,KAAK+J,YAAgB7J,GAAAC,EAAAC,cAACiK,GAAD,CAAWxG,UAAW7D,KAAK6D,UAAWC,QAAS9D,KAAKsK,oDAMrH,IAAM7I,EAAOzB,KAAKU,MAAMC,MAAMc,KAC9B,OAAQvB,GAAAC,EAAAC,cAAA,WACJF,GAAAC,EAAAC,cAACU,GAAA,EAAD,CAAMP,GAAG,SAAQL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAf,yBACjBN,GAAAC,EAAAC,cAAA,eAAOqB,EAAOzB,KAAKuK,SAAS9I,GAAQ,cA1C7BR,wDAEdC,8EAAyB,gDACzBA,+EAAyB,gDAEzBC,0FAAmB,SAACoB,GAAD,OAAYnB,EAAKoJ,YAAYlK,KAAKiC,qDAErDpB,iHAAyB,SAAAiF,IAAA,IAAAqE,EAAAtD,EAAAuD,EAAAC,EAAApB,EAAA,OAAAhD,GAAApG,EAAAqG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGtB,IAFI8D,EAAoB,CAAEG,IAAK3H,EAAKuH,YAAY,GAAIK,IAAK,GAEhD1D,EAAI,EAAGA,EAAIlE,EAAKuH,YAAY9G,OAAQyD,IAAK,CAE9C,IADIuD,EAAQ,EACHC,EAAIxD,EAAI,EAAGwD,EAAI1H,EAAKuH,YAAY9G,OAAQiH,IAAS1H,EAAKuH,YAAYG,KAAO1H,EAAKuH,YAAYrD,IAAIuD,IACnGA,EAAQD,EAAkBI,MAAKJ,EAAoB,CAAEG,IAAK3H,EAAKuH,YAAYrD,GAAI0D,IAAKH,IANtE,OAStBzH,EAAK+G,YAAcS,EAAkBG,IACjCrB,EAAStG,EAAKvC,MAAMC,MAAMc,KAAKwF,QAAQhE,EAAK+G,YAAc,GAVxCvD,EAAAE,KAAA,EAWhB1D,EAAKvC,MAAMC,MAAMmK,gBAAgBvB,EAAO7G,OAXxB,wBAAA+D,EAAAO,SAAAZ,EAAApG,0BCwBf+K,WAhCdjL,aAAO,WACPC,yVAKGmI,kBAAoB,WAChB3G,EAAKb,MAAMC,MAAMqK,qJAQZ,IAAA5J,EAAApB,KACC6H,EAAU7H,KAAKU,MAAMC,MAAMkH,QACjC,OAAI7H,KAAKC,SACEC,GAAAC,EAAAC,cAACC,GAAA,EAAD,CAAUC,MAAI,EAACC,GAAE,SAAA0K,OAAWjL,KAAKkL,gBAGpChL,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,MAAII,UAAU,iBAAd,iBACAN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,YACVqH,EAAUA,EAAQvF,IAAI,SAAC6I,EAAGhE,GAAJ,OAAUjH,GAAAC,EAAAC,cAACgL,GAAD,CAAS5J,WAAYJ,EAAKI,WAAYgB,IAAK2I,EAAEzJ,IAAKW,MAAO8E,EAAG1F,KAAM0J,MAAS,MAEhHjL,GAAAC,EAAAC,cAAA,WACAF,GAAAC,EAAAC,cAACU,GAAA,EAAD,CAAMP,GAAG,gBAAeL,GAAAC,EAAAC,cAAA,UAAQuB,KAAK,SAASnB,UAAU,8BAAhC,IAA8DN,GAAAC,EAAAC,cAAA,KAAGI,UAAU,gBAA3E,0BAzBhBS,qDACvBC,+EAAsB,gDACtBA,+EAA0B,iDAM1BC,0FAAoB,SAACkK,GAClBpI,EAAKiI,aAAeG,EACpBpI,EAAKhD,UAAW,oBCoBTqL,iMArCP,OACIpL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,QACXN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACfN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,6BAlCTS,eCyCPsK,GAnCdzL,aAAO,WACPC,mZAOGyL,6BAAQ,SAAApF,IAAA,OAAAG,GAAApG,EAAAqG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACApF,EAAKV,SADL,CAAA4F,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAEMpF,EAAKb,MAAMC,MAAM8K,QAAQlK,EAAKV,UAFpC,OAGAU,EAAKtB,UAAW,EAHhBwG,EAAAE,KAAA,eAKC5C,MAAM,8BALP,wBAAA0C,EAAAO,SAAAZ,EAAApG,mFASJ,OAAIA,KAAKC,SACEC,GAAAC,EAAAC,cAACC,GAAA,EAAD,CAAUC,MAAI,EAACC,GAAG,UAGzBL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,aACfN,GAAAC,EAAAC,cAACsL,GAAD,MACIxL,GAAAC,EAAAC,cAAA,MAAII,UAAU,eAAd,UACAN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,GAAAC,EAAAC,cAAA,QAAMI,UAAU,YAAhB,uCAAqEN,GAAAC,EAAAC,cAAA,WAASF,GAAAC,EAAAC,cAAA,WAASF,GAAAC,EAAAC,cAAA,SAAOI,UAAU,iBAAiBmB,KAAK,OAAOc,KAAK,WAAWI,SAAU7C,KAAK2L,YAAahJ,MAAO3C,KAAKa,WAC7LX,GAAAC,EAAAC,cAAA,WACAF,GAAAC,EAAAC,cAAA,SAAOI,UAAU,cAAcmB,KAAK,SAASZ,QAASf,KAAKwL,MAAO7I,MAAM,oBACxEzC,GAAAC,EAAAC,cAAA,sBA1BMa,qDACrBC,8EAAsB,6CACtBA,+EAAsB,+CAEtBC,0FAAqB,SAAC6B,GAAD,OAAO5B,EAAKP,SAAWmC,EAAEG,OAAOR,uBCsB3CiJ,iMA5BP,OACI1L,GAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,GAAAC,EAAAC,cAAA,oBACAF,GAAAC,EAAAC,cAAA,KAAGI,UAAU,WAAb,sDAA0EN,GAAAC,EAAAC,cAAA,WAA1E,2FAGAF,GAAAC,EAAAC,cAAA,OAAKI,UAAU,QACXN,GAAAC,EAAAC,cAACU,GAAA,EAAD,CAAMP,GAAG,SAAQL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,YAC5BN,GAAAC,EAAAC,cAAA,MAAII,UAAU,UAAd,iBAAyCN,GAAAC,EAAAC,cAAA,WACzCF,GAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAON,GAAAC,EAAAC,cAAA,KAAGI,UAAU,qBACpCN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAf,yFAGJN,GAAAC,EAAAC,cAACU,GAAA,EAAD,CAAMP,GAAG,UAASL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,OAC7BN,GAAAC,EAAAC,cAAA,MAAII,UAAU,UAAd,cAAsCN,GAAAC,EAAAC,cAAA,WACtCF,GAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAON,GAAAC,EAAAC,cAAA,KAAGI,UAAU,kBACpCN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAf,4CAEJN,GAAAC,EAAAC,cAACU,GAAA,EAAD,CAAMP,GAAG,cAAaL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACjCN,GAAAC,EAAAC,cAAA,MAAII,UAAU,UAAd,wBAAgDN,GAAAC,EAAAC,cAAA,WAChDF,GAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAON,GAAAC,EAAAC,cAAA,KAAGI,UAAU,iBACpCN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAf,6FAxBDS,eCwFR4K,UAvFd9L,6VAKG4L,YAAc,SAAC3I,GAAD,OAAOzB,EAAKuK,gBAAgB9I,EAAEG,OAAOV,MAAQO,EAAEG,OAAOR,SAEpEoJ,YAAc,WACLxK,EAAKa,UAAUsB,OAAS,IACrBnC,EAAKuK,gBAAgBlJ,MACrBrB,EAAKuK,gBAAgBE,SACrBzK,EAAKuK,gBAAgBG,SACrB1K,EAAKuK,gBAAgBI,SACrB3K,EAAKuK,gBAAgBK,UACzB5K,EAAKa,UAAU9B,KAAKiB,EAAKuK,iBACzBvK,EAAKuK,gBAAkB,CAAElJ,KAAM,GAAIoJ,QAAS,GAAIC,QAAS,GAAIC,QAAS,GAAIC,QAAS,QAI3FC,uBAAyB,WACrB,OACIlM,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,SAAOI,UAAU,iBAAiBmB,KAAK,OAAO0K,YAAY,WAAW5J,KAAK,OAAOE,MAAOpB,EAAKuK,gBAAgBlJ,KAAMC,SAAUtB,EAAKoK,cADtI,IACsJzL,GAAAC,EAAAC,cAAA,WAClJF,GAAAC,EAAAC,cAAA,SAAOI,UAAU,iBAAiBmB,KAAK,OAAO0K,YAAY,WAAW5J,KAAK,UAAUE,MAAOpB,EAAKuK,gBAAgBE,QAASnJ,SAAUtB,EAAKoK,cAF5I,IAE4JzL,GAAAC,EAAAC,cAAA,WACxJF,GAAAC,EAAAC,cAAA,SAAOI,UAAU,iBAAiBmB,KAAK,OAAO0K,YAAY,WAAW5J,KAAK,UAAUE,MAAOpB,EAAKuK,gBAAgBG,QAASpJ,SAAUtB,EAAKoK,cAH5I,IAG4JzL,GAAAC,EAAAC,cAAA,WACxJF,GAAAC,EAAAC,cAAA,SAAOI,UAAU,iBAAiBmB,KAAK,OAAO0K,YAAY,WAAW5J,KAAK,UAAUE,MAAOpB,EAAKuK,gBAAgBI,QAASrJ,SAAUtB,EAAKoK,cAJ5I,IAI4JzL,GAAAC,EAAAC,cAAA,WACxJF,GAAAC,EAAAC,cAAA,SAAOI,UAAU,iBAAiBmB,KAAK,OAAO0K,YAAY,WAAW5J,KAAK,UAAUE,MAAOpB,EAAKuK,gBAAgBK,QAAStJ,SAAUtB,EAAKoK,cAL5I,IAK4JzL,GAAAC,EAAAC,cAAA,WACxJF,GAAAC,EAAAC,cAAA,SAAOI,UAAU,OAAOmB,KAAK,SAASgB,MAAM,IAAI5B,QAASQ,EAAKwK,kBAK1EO,sBAAwB,SAACC,GACrB,OACIrM,GAAAC,EAAAC,cAAA,WACKmM,EAAUhL,EAAK6K,yBAA2BlM,GAAAC,EAAAC,cAAA,uDAC1CmB,EAAKa,UAAUE,IAAI,SAAC6I,EAAGhE,GAAJ,OAChBjH,GAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWgC,IAAK2E,GAC3BjH,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAO6K,aAAcrB,EAAEvI,OADvC,IACgD1C,GAAAC,EAAAC,cAAA,WAC5CF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAO6K,aAAcrB,EAAEa,UAFvC,IAEmD9L,GAAAC,EAAAC,cAAA,WAC/CF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAO6K,aAAcrB,EAAEc,UAHvC,IAGmD/L,GAAAC,EAAAC,cAAA,WAC/CF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAO6K,aAAcrB,EAAEe,UAJvC,IAImDhM,GAAAC,EAAAC,cAAA,WAC/CF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAO6K,aAAcrB,EAAEgB,UALvC,IAKmDjM,GAAAC,EAAAC,cAAA,kBAOnEqM,kBAAoB,WAChB,OAA8B,KAA1BlL,EAAKa,UAAUsB,OAAsBnC,EAAK+K,uBAAsB,GAChE/K,EAAKa,UAAUsB,OAAenC,EAAK+K,uBAAsB,GACtD/K,EAAK6K,4BAGhBM,cAAgB,WACZ,GAAInL,EAAKa,UAAUsB,QAAU,EAAG,CAC5B,IAAIiJ,EAAqB,GADGvF,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAE5B,QAAAC,EAAAC,EAAclG,EAAKa,UAAnBsF,OAAAC,cAAAP,GAAAI,EAAAC,EAAAd,QAAAiB,MAAAR,GAAA,EAA8B,KAArB+D,EAAqB3D,EAAA7E,MACtBW,EAAW,CACXV,KAAMuI,EAAEvI,KACRT,QAAS,CACL,CAAES,KAAMuI,EAAEa,QAAStJ,MAAO,GAC1B,CAAEE,KAAMuI,EAAEc,QAASvJ,MAAO,GAC1B,CAAEE,KAAMuI,EAAEe,QAASxJ,MAAO,GAC1B,CAAEE,KAAMuI,EAAEgB,QAASzJ,MAAO,KAGlCiK,EAAmBrM,KAAKgD,IAZA,MAAA0E,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAc5B/F,EAAKb,MAAMgM,cAAcC,QAExB5I,MAAM,mHAIX,OACI7D,GAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,GAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,+BACAN,GAAAC,EAAAC,cAAA,kFACCJ,KAAKyM,oBACNvM,GAAAC,EAAAC,cAAA,SAAOI,UAAU,cAAcmB,KAAK,SAASgB,MAAM,iBAAiB5B,QAASf,KAAK0M,wBAhFvEzL,sDACtBC,8EAAuB,oDACvBA,8EAA6B,CAAE0B,KAAM,GAAIoJ,QAAS,GAAIC,QAAS,GAAIC,QAAS,GAAIC,QAAS,iBCkD/ES,iNAtDX3F,QAAU,CAAE4F,OAAQ,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,MAAO,MAEpGC,YAAc,WACV,GAAK9L,EAAK0F,QAAQ4F,QACVtL,EAAK0F,QAAQ6F,OACbvL,EAAK0F,QAAQ8F,QACbxL,EAAK0F,QAAQ+F,OACbzL,EAAK0F,QAAQgG,QACb1L,EAAK0F,QAAQiG,OACb3L,EAAK0F,QAAQkG,QACb5L,EAAK0F,QAAQmG,MAAQ,CACzB,IAAIE,EAAmB,CACnB,CAAE5K,MAAO,EAAGZ,MAAOP,EAAK0F,QAAQ4F,OAAQ9K,KAAMR,EAAK0F,QAAQ6F,OAC3D,CAAEpK,MAAO,EAAGZ,MAAOP,EAAK0F,QAAQ8F,OAAQhL,KAAMR,EAAK0F,QAAQ+F,OAC3D,CAAEtK,MAAO,EAAGZ,MAAOP,EAAK0F,QAAQgG,OAAQlL,KAAMR,EAAK0F,QAAQiG,OAC3D,CAAExK,MAAO,EAAGZ,MAAOP,EAAK0F,QAAQkG,OAAQpL,KAAMR,EAAK0F,QAAQmG,QAE/D7L,EAAKb,MAAM2M,YAAYC,QACpBvJ,MAAM,qCAGjB4H,YAAc,SAAC3I,GAAD,OAAOzB,EAAK0F,QAAQjE,EAAEG,OAAOV,MAAQO,EAAEG,OAAOR,iFAGxD,OACIzC,GAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,GAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,iCACAN,GAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,GAAAC,EAAAC,cAAA,gBADJ,UAEWF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOc,KAAK,SAAS4J,YAAY,QAAQxJ,SAAU7C,KAAK2L,cAF/E,IAE+FzL,GAAAC,EAAAC,cAAA,WAF/F,gBAGiBF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOc,KAAK,QAAQ4J,YAAY,cAAcxJ,SAAU7C,KAAK2L,eAE1FzL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,GAAAC,EAAAC,cAAA,gBADJ,UAEWF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOc,KAAK,SAAS4J,YAAY,QAAQxJ,SAAU7C,KAAK2L,cAF/E,IAE+FzL,GAAAC,EAAAC,cAAA,WAF/F,gBAGiBF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOc,KAAK,QAAQ4J,YAAY,cAAcxJ,SAAU7C,KAAK2L,eAE1FzL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,GAAAC,EAAAC,cAAA,gBADJ,UAEWF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOc,KAAK,SAAS4J,YAAY,QAAQxJ,SAAU7C,KAAK2L,cAF/E,IAE+FzL,GAAAC,EAAAC,cAAA,WAF/F,gBAGiBF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOc,KAAK,QAAQ4J,YAAY,cAAcxJ,SAAU7C,KAAK2L,eAE1FzL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,GAAAC,EAAAC,cAAA,gBADJ,UAEWF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOc,KAAK,SAAS4J,YAAY,QAAQxJ,SAAU7C,KAAK2L,cAF/E,IAE+FzL,GAAAC,EAAAC,cAAA,WAF/F,gBAGiBF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOc,KAAK,QAAQ4J,YAAY,cAAcxJ,SAAU7C,KAAK2L,eAE1FzL,GAAAC,EAAAC,cAAA,WACAF,GAAAC,EAAAC,cAAA,SAAOI,UAAU,cAAcmB,KAAK,SAASgB,MAAM,eAAe5B,QAASf,KAAKqN,sBAjDtEpM,cCmEXsM,GA5DdzN,aAAO,WACPC,8NAEGyN,WAAa,CACT1L,MAAO,GACP2L,YAAa,iEAKjBC,cAAgB,OAChBC,YAAc,OAEdhC,YAAc,SAAC3I,GAAD,OAAOzB,EAAKiM,WAAWxK,EAAEG,OAAOV,MAAQO,EAAEG,OAAOR,SAE/D+J,cAAgB,SAACtK,GAAD,OAAeb,EAAKmM,cAAgBtL,KAEpDiL,YAAc,SAACpG,GAAD,OAAa1F,EAAKoM,YAAc1G,KAE9C2G,gCAAW,SAAAxH,IAAA,IAAAyH,EAAAzL,EAAA6E,EAAA,OAAAV,GAAApG,EAAAqG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACFpF,EAAKiM,WAAW1L,OACbP,EAAKiM,WAAWC,aAChBlM,EAAKmM,eACLnM,EAAKoM,aAJN,CAAAlH,EAAAE,KAAA,eAKGkH,EAAStM,EAAKiM,WACdpL,EAAYb,EAAKmM,cACjBzG,EAAU1F,EAAKoM,YAPlBlH,EAAAE,KAAA,EAQGpF,EAAKb,MAAMC,MAAMiN,SAASC,EAAQzL,EAAW6E,GARhD,OASH1F,EAAKtB,UAAW,EATbwG,EAAAE,KAAA,gBAUA5C,MAAM,2CAVN,yBAAA0C,EAAAO,SAAAZ,EAAApG,mFAcP,OAAIA,KAAKC,SACEC,GAAAC,EAAAC,cAACC,GAAA,EAAD,CAAUC,MAAI,EAACC,GAAG,UAGzBL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,eACfN,GAAAC,EAAAC,cAACU,GAAA,EAAD,CAAMP,GAAG,SAAQL,GAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAf,wBACbN,GAAAC,EAAAC,cAAA,MAAII,UAAU,eAAd,yBACAN,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,oBACAF,GAAAC,EAAAC,cAAA,WACAF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOc,KAAK,QAAQI,SAAU7C,KAAK2L,YAAaU,YAAY,UACxEnM,GAAAC,EAAAC,cAAA,YAEJF,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,2BACAF,GAAAC,EAAAC,cAAA,WACAF,GAAAC,EAAAC,cAAA,YAAUqC,KAAK,cAAcI,SAAU7C,KAAK2L,YAAamC,KAAK,IAAIC,KAAK,KAAK1B,YAAY,0BACxFnM,GAAAC,EAAAC,cAAA,YAEJF,GAAAC,EAAAC,cAAC4N,GAAD,CAAaX,YAAarN,KAAKqN,cAC/BnN,GAAAC,EAAAC,cAAC6N,GAAD,CAAcvB,cAAe1M,KAAK0M,gBAClCxM,GAAAC,EAAAC,cAAA,SAAOI,UAAU,cAAcmB,KAAK,SAASgB,MAAM,eAAe5B,QAASf,KAAK4N,mBApDvE3M,qDAMpBC,+EAAsB,kBCgDZgN,kBA7DdnO,ydAmBGoO,cAAgB,WACZ,OACIjO,GAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACXN,GAAAC,EAAAC,cAAA,MAAII,UAAU,mBAAmBe,EAAK6M,cAAcC,MACpDnO,GAAAC,EAAAC,cAAA,0BAAkBmB,EAAK6M,cAAcE,aAArC,IAAmDpO,GAAAC,EAAAC,cAAA,YACnDF,GAAAC,EAAAC,cAAA,wBAAgBmB,EAAK6M,cAAcG,WAAnC,IAA+CrO,GAAAC,EAAAC,cAAA,YAC/CF,GAAAC,EAAAC,cAAA,2BAAmBmB,EAAK6M,cAAcI,cAAtC,IAAqDtO,GAAAC,EAAAC,cAAA,YACrDF,GAAAC,EAAAC,cAAA,0BAAkBmB,EAAK6M,cAAcK,aAArC,IAAmDvO,GAAAC,EAAAC,cAAA,YACnDF,GAAAC,EAAAC,cAAA,mBAAWmB,EAAK6M,cAActJ,MAA9B,IAAqC5E,GAAAC,EAAAC,cAAA,YACrCF,GAAAC,EAAAC,cAAA,kBAAUmB,EAAK6M,cAAcM,KAA7B,IAAmCxO,GAAAC,EAAAC,cAAA,WAAMF,GAAAC,EAAAC,cAAA,YACzCF,GAAAC,EAAAC,cAAA,6BAAqBmB,EAAK6M,cAAcX,YAAxC,IAAqDvN,GAAAC,EAAAC,cAAA,wFAM7D,OAAQF,GAAAC,EAAAC,cAAA,WACJF,GAAAC,EAAAC,cAAA,MAAIK,GAAG,mBAAP,oBACAP,GAAAC,EAAAC,cAAA,gFACAF,GAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,GAAAC,EAAAC,cAAA,UAASI,UAAU,uDAAuDmC,MAAO3C,KAAK2O,SAAU9L,SAAU7C,KAAK4O,aAC3G1O,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,SACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,UACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,UACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,UACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,OACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,SACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,SACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,WACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,eACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,aACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,YACAN,GAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,WAEJN,GAAAC,EAAAC,cAAA,SAAOI,UAAU,oDAAoDmB,KAAK,SAASgB,MAAM,oBAAoB5B,QAASf,KAAK6O,iBAC1H7O,KAAKoO,cAAgBpO,KAAKmO,gBAAkB,cArDrClN,0DACnBC,+EAA2B,+CAE3BA,8EAAsB,qDAEtBC,0FAAqB,SAAC6B,GAAD,OAAO5B,EAAKuN,SAAS3L,EAAEG,OAAOR,uDAEnDxB,0FAAwB,WACrB,IAAM2N,EAAM,2CAA6C7L,EAAK0L,SAAW,aACzEI,MAAMD,EAAK,CACPE,OAAQ,SACTC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SACxBF,KAAK,SAAAE,GACFlM,EAAKmL,cAAgBe,EACrBlM,EAAKmL,cAAcC,KAAOpL,EAAK0L,8CC0FhCS,WAxGdtP,aAAO,YACPC,uhBAQGsP,GAAK,KACLC,mBAAqB,KAWrBC,cAAgB,WACZ,IAAK,IAAIpI,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIqI,EAAOC,KAAKC,MAAoB,EAAdD,KAAKE,SAAW,GACtCpO,EAAK+N,mBAAmBhP,KAAK,CAACsP,IAAOrO,EAAK8N,GAAGlI,GAAR,IAAmBqI,KAAQA,QAIxE7D,YAAc,SAAC3I,GACXzB,EAAKsO,UAAY7M,EAAEG,OAAOR,MAC1B2F,QAAQwH,IAAIvO,EAAKsO,cAGrBE,UAAY,WACR,IAAMH,EAAMrO,EAAK+N,mBACjB,IAAK,IAAInI,KAAKyI,EACVrO,EAAKyO,gBAAgB1P,KAAK,CAACsP,EAAIzI,GAAJ,IAAeyI,EAAIzI,GAAJ,OAE9CmB,QAAQwH,IAAIvO,EAAKyO,iBACjBC,KAAUC,SAASC,eAAe,MAC9B,CACIC,KAAM7O,EAAKyO,gBACXK,aAAc,EACdC,WAAY,eACZC,cAAe,EACfC,gBAAiB,YAEzBC,WAAW,WACPlP,EAAKmP,WAAY,EACjBnP,EAAKoP,aAAc,GACpB,QAGPC,eAAiB,WACb,OAAIrP,EAAKoP,YAEDzQ,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,yCACAF,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOc,KAAK,YAAYE,MAAOpB,EAAKsO,UAAWhN,SAAUtB,EAAKoK,YAAanL,UAAU,iBACjGN,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,SAASnB,UAAU,eAAemC,MAAM,QAAQ5B,QAASQ,EAAKsP,aAI1E,QAGhBA,UAAY,WACR,IAAIjB,EAAMrO,EAAK+N,mBACf,IAAK,IAAInI,KAAKyI,EACNrO,EAAKsO,YAAcD,EAAIzI,GAAJ,IACnB5F,EAAKuP,SAAU,EACZxI,QAAQwH,IAAI,UAI3BiB,WAAa,WACT,IAAI1B,EAAK9N,EAAK8N,GACd,IAAI,IAAIlI,KAAKkI,EACT,GAAI9N,EAAKuP,QACL,OAAO5Q,GAAAC,EAAAC,cAAA,SAAIiP,EAAGlI,GAAH,MAAejH,GAAAC,EAAAC,cAAA,WAAnB,IAA0BiP,EAAGlI,GAAH,8FAlEzB,IAAA/F,EAAApB,KAChB+O,MAAM,oCAAoCE,KAAK,SAAA+B,GAAG,OAAIA,EAAI7B,SAAQF,KAAK,SAAAE,GACnE/N,EAAKiO,GAAKF,EACV7G,QAAQwH,IAAI1O,EAAKiO,IACjBjO,EAAKmO,mDAoET,OACIrP,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,MAAII,UAAU,eAAd,cACAN,GAAAC,EAAAC,cAAA,MAAII,UAAU,cAAd,4BACIN,GAAAC,EAAAC,cAAA,WADJ,+BAICJ,KAAK0Q,UAAYxQ,GAAAC,EAAAC,cAAA,SAAOuB,KAAK,SAASnB,UAAU,eAAeO,QAASf,KAAK+P,UAAWpN,MAAM,gBAAmB,KAClHzC,GAAAC,EAAAC,cAAA,WACCJ,KAAK0Q,UAAYxQ,GAAAC,EAAAC,cAAA,UAAQI,UAAU,QAAQ0E,OAAO,MAAMD,MAAM,MAAMxE,GAAG,KAAKwQ,IAAI,cAAyB,MAE7GjR,KAAK4Q,iBACL5Q,KAAK8Q,QAAU9Q,KAAK+Q,aAAe,aAhGhC9P,wDAEfC,+EAAuB,iDACvBA,+EAAyB,6CACzBA,+EAAqB,+CACrBA,8EAAuB,sDACvBA,8EAA6B,wBCyBnBgQ,GA1BdpR,aAAO,YACPC,8NAECoR,WAAa,WACX,OAAG5P,EAAKb,MAAMC,MAAMC,KAAaV,GAAAC,EAAAC,cAACgR,GAAD,MAC1B,gFAIP,OACAlR,GAAAC,EAAAC,cAACiR,GAAA,EAAD,KACEnR,GAAAC,EAAAC,cAAA,OAAKI,UAAU,OACdR,KAAKmR,aACJjR,GAAAC,EAAAC,cAACkR,GAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAMvR,GAAAC,EAAAC,cAACsR,GAAD,SACpCxR,GAAAC,EAAAC,cAACkR,GAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,OAAQ,kBAAMvR,GAAAC,EAAAC,cAACuR,GAAD,SACxCzR,GAAAC,EAAAC,cAACkR,GAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,OAAQ,kBAAKvR,GAAAC,EAAAC,cAACwR,GAAD,SAC9C1R,GAAAC,EAAAC,cAACkR,GAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,OAAQ,kBAAKvR,GAAAC,EAAAC,cAACyR,GAAD,SACvC3R,GAAAC,EAAAC,cAACkR,GAAA,EAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,OAAQ,kBAAKvR,GAAAC,EAAAC,cAAC0R,GAAD,SAC5C5R,GAAAC,EAAAC,cAACkR,GAAA,EAAD,CAAOC,KAAK,SAASC,OAAK,EAACC,OAAQ,kBAAKvR,GAAAC,EAAAC,cAAC2R,GAAD,SACxC7R,GAAAC,EAAAC,cAACkR,GAAA,EAAD,CAAOE,OAAK,EAACD,KAAK,YAAYE,OAAQ,SAAAO,GAAA,IAAG/H,EAAH+H,EAAG/H,MAAH,OAAe/J,GAAAC,EAAAC,cAAC6R,GAAD,CAAMhI,MAAOA,gBAjBxDhJ,wBCHEiR,QACW,cAA7BxI,OAAOyI,SAASC,UAEe,UAA7B1I,OAAOyI,SAASC,UAEhB1I,OAAOyI,SAASC,SAASnI,MACvB,+DC+BStJ,GADD,gdA5CTO,+EAAkBmR,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,gDAC9DtR,+EAAqB,6CACrBA,+EAAkB,kDAClBA,+EAAuB,6CAEvBC,kIAAiB,SAAAiF,EAAOvF,GAAP,IAAA4R,EAAA,OAAAlM,GAAApG,EAAAqG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQC,KAAMC,IAAI,SAAWhG,GAD7B,OACR4R,EADQhM,EAAAK,KAEdvF,EAAKX,KAAO6R,EAAQlN,KACpBgN,aAAaG,QAAQ,OAAQL,KAAKM,UAAUpR,EAAKX,OAHnC,wBAAA6F,EAAAO,SAAAZ,EAAApG,yGAMjBmB,0FAAgB,WACbC,EAAKR,KAAO,KACZ2R,aAAaG,QAAQ,OAAQL,KAAKM,UAAU,sDAG/CxR,iHAAoB,SAAAyR,IAAA,IAAAC,EAAA,OAAAtM,GAAApG,EAAAqG,KAAA,SAAAsM,GAAA,cAAAA,EAAApM,KAAAoM,EAAAnM,MAAA,cAAAmM,EAAAnM,KAAA,EACQC,KAAMC,IAAI,YADlB,OACXgM,EADWC,EAAAhM,KAEjB7D,EAAK4E,QAAUgL,EAAWtN,KAFT,wBAAAuN,EAAA9L,SAAA4L,EAAA5S,4DAKpBmB,kIAAyB,SAAA4R,EAAO1M,GAAP,IAAA2M,EAAA,OAAAzM,GAAApG,EAAAqG,KAAA,SAAAyM,GAAA,cAAAA,EAAAvM,KAAAuM,EAAAtM,MAAA,cAAAsM,EAAAtM,KAAA,EACKC,KAAMC,IAAI,SAAWR,GAD1B,OAChB2M,EADgBC,EAAAnM,KAEtBoM,EAAKzR,KAAOuR,EAAazN,KAFH,wBAAA0N,EAAAjM,SAAA+L,EAAA/S,2GAKzBmB,uHAAkB,SAAAgS,EAAOtF,EAAQzL,EAAW6E,GAA1B,IAAAmM,EAAAjI,EAAA,OAAA5E,GAAApG,EAAAqG,KAAA,SAAA6M,GAAA,cAAAA,EAAA3M,KAAA2M,EAAA1M,MAAA,cACXyM,EAAU,CACVtR,MAAO+L,EAAO/L,MACdC,KAAM8L,EAAOJ,YACbrL,UAAWA,EACX6E,QAASA,GALEoM,EAAA1M,KAAA,EAODC,KAAM0M,KAAK,QAASF,GAPnB,OAOXjI,EAPWkI,EAAAvM,KAQfwB,QAAQwH,IAAI3E,EAAE5F,MARC,wBAAA8N,EAAArM,SAAAmM,EAAAnT,sHAWlBmB,kIAAyB,SAAAoS,EAAO7Q,GAAP,IAAA8Q,EAAA5S,EAAA,OAAA2F,GAAApG,EAAAqG,KAAA,SAAAiN,GAAA,cAAAA,EAAA/M,KAAA+M,EAAA9M,MAAA,cAClB6M,EAAW,CAAEzL,IAAK2L,EAAKjS,KAAKC,IAAKgB,MAAOA,GADtB+Q,EAAA9M,KAAA,EAELC,KAAM0M,KAAK,iBAAmBI,EAAK9S,KAAKc,IAAK8R,GAFxC,OAElB5S,EAFkB6S,EAAA3M,KAGtB4M,EAAK9S,KAAOA,EAAK2E,KAHK,wBAAAkO,EAAAzM,SAAAuM,EAAAvT,sECjC9B2T,KAASlC,OAAOvR,GAAAC,EAAAC,cAACwT,GAAA,EAAD,CAAUjT,MAAOA,IAC7BT,GAAAC,EAAAC,cAACyT,GAAD,OACS3D,SAASC,eAAe,SFuH/B,kBAAmB2D,WACrBA,UAAUC,cAAcC,MAAM/E,KAAK,SAAAgF,GACjCA,EAAaC","file":"static/js/main.41496a15.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/nav-bar.css';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from \"mobx\";\r\nimport { Redirect } from 'react-router';\r\n\r\n@inject('store')\r\n@observer\r\nclass NavBar extends Component {\r\n    @observable redirect = false;\r\n    \r\n    @action logout = () => {\r\n        this.props.store.logout()\r\n        this.redirect = true;\r\n    }\r\n\r\n    render() {\r\n        if (this.redirect) {\r\n            return <Redirect push to=\"/\" />;\r\n        }\r\n        return (\r\n            <nav className=\"allnavbar\">\r\n                <div className=\"logo\">\r\n                    <span className=\"leftnavbar\">\r\n                        QUIZZA\r\n                    </span>\r\n                    <span id=\"username\">Hello, {this.props.store.user.userName}!</span>\r\n                    <span className=\"rightnavbar\">\r\n                        <Link to=\"/home\" className='navLinks'><i className=\"fas fa-home\"></i><span> Home </span></Link>\r\n                        <Link to='/' className='navLinks' onClick={this.logout}>\r\n                        <i className=\"fas fa-sign-in-alt\"></i><span> Logout </span>\r\n                        </Link>\r\n                    </span>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport '../../css/quizzes-box.css';\r\n\r\n@inject('store')\r\n@observer\r\nclass BoxTest extends Component {\r\n\r\n    startQuiz = () => this.props.selectQuiz(this.props.quiz._id)\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"about\" className=\"page-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3 col-sm-6 col-xs-12\">\r\n                            <button className=\"quiz-box\" type=\"button\" id=\"buttonModal1\" data-toggle=\"modal\" data-target=\"#myModal1\" onClick={this.startQuiz}>\r\n                                <div className=\"service-item second-service\">\r\n                                    <div className=\"icon\"></div>\r\n                                    <div >\r\n                                        <h2 className=\"box-title\"> {this.props.quiz.title} </h2>\r\n                                        <p> {this.props.quiz.desc} </p>\r\n                                    </div>\r\n                                </div>\r\n                            </button >\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoxTest;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport BoxTest from './BoxTest';\r\n\r\n@inject('store')\r\n@observer\r\nclass QuizBox extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='box-link'>\r\n                <BoxTest selectQuiz={this.props.selectQuiz} quiz={this.props.quiz} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizBox;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { observable, action } from \"mobx\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Answers extends Component {\r\n\r\n    @observable answer = 0\r\n\r\n    @action changeAnswer = (e) => {\r\n        this.answer = parseInt(e.target.id)\r\n        this.props.checkAnswer(this.answer)\r\n    }\r\n\r\n    render() {\r\n        const answers = this.props.store.quiz.questions[this.props.index].answers;\r\n        return (\r\n            <div className=\"answers\">\r\n                {answers.map((answer) => {\r\n                    return (\r\n                        <div className=\"answer\" key={answer._id}>\r\n                            <input type=\"radio\" name=\"answer\" id={answer.score} key={answer.score} value={answer.text} onChange={this.changeAnswer} />\r\n                            <label htmlFor={answer.score}>{answer.text}</label>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Answers;","import React, { Component } from 'react';\r\nimport Answers from './Answers';\r\nimport { inject, observer } from 'mobx-react';\r\nimport '../../css/questiondisplay.css';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Question extends Component {\r\n\r\n    render() {\r\n        let question = this.props.store.quiz.questions[this.props.index]\r\n        return (\r\n            <div className=\"question\">\r\n                <h3 className=\"quiz-title\">{question.text}</h3>\r\n                <Answers index={this.props.index} checkAnswer={this.props.checkAnswer} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Question;","import React, { Component } from \"react\";\r\nimport Question from './Question';\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { observable, action } from 'mobx'\r\nimport '../../css/questiondisplay.css';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Questions extends Component {\r\n    @observable index = 0\r\n    @observable answer = 0\r\n\r\n\r\n    checkAnswer = (answer) => {\r\n        if (answer) this.answer = answer\r\n    }\r\n\r\n    @action nextquestion = () => {\r\n        if (this.answer) {\r\n            let length = this.props.store.quiz.questions.length\r\n            if (this.index < length - 1) {\r\n                this.props.addAnswer(this.answer)\r\n                this.answer = 0\r\n                this.index++\r\n            }\r\n            else {\r\n                this.props.addAnswer(this.answer)\r\n                this.props.endQuiz()\r\n            }\r\n        }\r\n        else {\r\n            alert(\"Please choose a answer to continue\")\r\n        }\r\n\r\n    }\r\n    render() {\r\n        let qIndex = this.index+1;\r\n        let length = this.props.store.quiz.questions.length        \r\n        return (\r\n            <div className=\"Questions\">\r\n                <Question index={this.index} key={this.index} checkAnswer={this.checkAnswer} />\r\n            <span className=\"onquestion\">{qIndex}/{length}</span>\r\n                <form>\r\n                    <span><input type=\"button\" className=\"next-button\" value=\"next\" onClick={this.nextquestion} /></span>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Questions;","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport '../../css/loader.css';\r\n\r\nexport class MyLoader extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.wrapperClass}>\r\n\r\n                {this.props.loaded ?\r\n                    <div>{this.props.children}</div>\r\n                    :\r\n                    (<div className=\"loader-container\">\r\n                        <Loader type=\"Puff\" color=\"rgb(217, 144, 230)\" />\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyLoader","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Tooltip, PieChart, Pie, Cell } from 'recharts';\r\n\r\n@inject('store')\r\n@observer\r\nclass PieCharts extends Component {\r\n    render() {\r\n        return (\r\n            <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\r\n                <Tooltip />\r\n                <Pie\r\n                    data={this.props.data}\r\n                    cx={120}\r\n                    cy={200}\r\n                    innerRadius={60}\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    paddingAngle={5}\r\n                    label\r\n                >\r\n                    {this.props.data.map((entry, index) => <Cell fill={this.props.colors[index % this.props.colors.length]} />)}\r\n                </Pie>\r\n            </PieChart>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PieCharts;","import React, { Component } from 'react'\r\nimport { observer, inject } from 'mobx-react';\r\nimport axios from 'axios';\r\n// import apiUtils from '../../utils/apiUtils';\r\nimport MyLoader from '../General/MyLoader';\r\nimport PieCharts from './charts/PieCharts';\r\nimport { observable } from 'mobx';\r\nimport '../../css/analytics.css';\r\n\r\n@inject('store')\r\n@observer\r\nclass Chart extends Component {\r\n    @observable data = null;\r\n    @observable loaded = false;\r\n\r\n    getData = async () => {\r\n        let quizID = this.props.store.quiz._id;\r\n        let users = await axios.get('/user/quizzes/' + quizID)\r\n        this.sortResults(users.data);\r\n        this.loaded = true;\r\n    };\r\n\r\n    sortResults = (users) => {\r\n        this.data = [\r\n            { name: '', value: 1 },\r\n            { name: '', value: 1 },\r\n            { name: '', value: 1 },\r\n            { name: '', value: 1 }\r\n        ]\r\n\r\n        let results = this.props.store.quiz.results\r\n        results.map((r, i) => this.data[i].name = r.title)\r\n\r\n        for (let user of users) {\r\n            let score = user.quizzes.filter(quiz => quiz.qID === this.props.store.quiz._id)[0].score\r\n            this.data[score - 1].value++\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getData();\r\n    };\r\n\r\n    getChart = () => {\r\n        switch (this.props.chartType) {\r\n            case 'pie':\r\n                return (\r\n                    <PieCharts data={this.data} colors={this.props.colors} />\r\n                );\r\n            default:\r\n                console.error('Invalid chartType prop');\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MyLoader loaded={this.loaded} wrapperClass=\"chart-item\">\r\n                {/* <p className='chartName'> {this.props.title} </p><br></br><br></br> */}\r\n                <p className='chartDesc'>Just to let you know, other users got the following results:</p>\r\n                {this.data ? this.getChart() : null}\r\n            </MyLoader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chart;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Chart from './Chart';\r\n\r\n@inject('store')\r\n@observer\r\nclass Charts extends Component {\r\n\r\n\r\n    getCharts = () => {\r\n        // adding something with MOMENT package? adding dates/ months\r\n        const charts = [\r\n            {\r\n                id: 'resultsAcquisition',\r\n                title: 'Results Acquisition',\r\n                chartType: 'pie',\r\n                colors: ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'],\r\n                pieDataKey: 'results',\r\n                pieNameKey: 'quiz'\r\n            }\r\n        ];\r\n        return charts;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"charts-container main-container\">\r\n                {this.getCharts().map(c =>\r\n                    <Chart\r\n                        key={c.id}\r\n                        id={c.id}\r\n                        title={c.title}\r\n                        url={c.url}\r\n                        chartType={c.chartType}\r\n                        color={c.color}\r\n                        colors={c.colors}\r\n                        layout={c.layout}\r\n                        pieDataKey={c.pieDataKey}\r\n                        pieNameKey={c.pieNameKey}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Charts;","import React, { Component } from 'react';\r\nimport Charts from './Charts';\r\nimport '../../css/analytics.css';\r\n\r\nclass Analytics extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"analytics-container\">\r\n                <Charts />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Analytics;   ","import React, { Component } from 'react';\r\nimport Analytics from '../analytics/Analytics';\r\nimport '../../css/resultsForm.css'\r\n\r\nclass Result extends Component {\r\n\r\n    tweetReady = () => {\r\n        let result = this.props.result();\r\n        let tweet = '';\r\n\r\n        let titleForTweet = result.title.replace(/<(?:.|\\n)*?>/gm, '');\r\n        tweet = encodeURIComponent(titleForTweet)\r\n        window.open(\"https://twitter.com/intent/tweet?text=\" + tweet, \"_blank\")\r\n    }\r\n\r\n    facebookReady = () => {\r\n        let result = this.props.result();\r\n        let title = '';\r\n        title = result.title.replace(/<(?:.|\\n)*?>/gm, '');\r\n        let url = ('https://quizza-app.herokuapp.com/')\r\n        window.open('https://www.facebook.com/sharer/sharer.php?u=' + url + \"&quote=\" + title, 'facebook-popup', 'height=350,width=600');\r\n    }\r\n\r\n    render() {\r\n        let result = this.props.result();\r\n        return (\r\n            <div>\r\n                <h5 className='resultTitle'>{result.title}</h5>\r\n                <p className='resultDesc'>{result.desc}</p>\r\n                <input className=\"twitter-button resultTitle\" type=\"button\" value=\"share on twitter\" onClick={this.tweetReady} />\r\n                <input className=\"facebook-button resultTitle\" type=\"button\" value=\"share on facebook\" onClick={this.facebookReady} />\r\n                <br></br>\r\n                <Analytics />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Result;","import React, { Component } from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { observable, action } from \"mobx\";\r\nimport Questions from './Questions';\r\nimport Result from '../Results/Result';\r\nimport '../../css/quiz.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n@inject('store')\r\n@observer\r\nclass Quiz extends Component {\r\n\r\n    @observable userAnswers = [];\r\n    @observable finalResult = null;\r\n\r\n    @action addAnswer = (answer) => this.userAnswers.push(answer)\r\n\r\n    @action calcFinalResult = async () => {\r\n        let greatestOccurring = { val: this.userAnswers[0], occ: 0 };\r\n\r\n        for (let i = 0; i < this.userAnswers.length; i++) {\r\n            let count = 1;\r\n            for (let j = i + 1; j < this.userAnswers.length; j++) if (this.userAnswers[j] === this.userAnswers[i]) count++;\r\n            if (count > greatestOccurring.occ) greatestOccurring = { val: this.userAnswers[i], occ: count }\r\n        }\r\n\r\n        this.finalResult = greatestOccurring.val;\r\n        let result = this.props.store.quiz.results[this.finalResult - 1]\r\n        await this.props.store.saveUserResults(result.score)\r\n    }\r\n\r\n    getResult = () => this.props.store.quiz.results[this.finalResult - 1]\r\n\r\n    componentDidMount() {\r\n        let quizID = this.props.match.params.id\r\n        this.props.store.getCurrentQuizz(quizID)\r\n    }\r\n\r\n    showQuiz(quiz) {\r\n        return (\r\n            <div className=\"quiz\">\r\n                <h3 className='quizResultTitle ' id=\"quizResultTitle\">{quiz.title}</h3>\r\n                <br />\r\n                {this.finalResult ? <Result result={this.getResult} /> : <Questions addAnswer={this.addAnswer} endQuiz={this.calcFinalResult} />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const quiz = this.props.store.quiz\r\n        return (<div>\r\n            <Link to=\"/quiz\"><div className=\"BackButton\"> Back to all quizzes</div></Link>\r\n            <div> {quiz ? this.showQuiz(quiz) : null}</div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\nimport QuizBox from './QuizBox';\r\nimport { observable, action } from \"mobx\";\r\nimport Quiz from '../Quiz/Quiz'\r\nimport '../../css/QuizScreen.css';\r\nimport { Redirect } from 'react-router';\r\n\r\n@inject('store')\r\n@observer\r\nclass QuizzesScreen extends Component {\r\n    @observable redirect = false;\r\n    @observable selectedQuiz = null;\r\n\r\n    componentDidMount = () => {\r\n        this.props.store.getQuizzes()\r\n    }\r\n\r\n    @action selectQuiz = (quizId) => {\r\n        this.selectedQuiz = quizId;\r\n        this.redirect = true;\r\n    }\r\n\r\n    render() {\r\n        const quizzes = this.props.store.quizzes\r\n        if (this.redirect) {\r\n            return <Redirect push to={`/quiz/${this.selectedQuiz}`} />;\r\n        }\r\n            return (\r\n                <div>\r\n                    <h4 className=\"title-quizzes\"> Our Quizzes </h4>\r\n                    <div className='quiz-row'>\r\n                        {quizzes ? quizzes.map((q, i) => <QuizBox selectQuiz={this.selectQuiz} key={q._id} index={i} quiz={q} />) : null}\r\n                    </div>\r\n                    <br></br>\r\n                    <Link to=\"/create-quiz\"><button type=\"button\" className='addQuiz btn btn-secondary '> <i className='fas fa-plus'></i> add a quiz  </button></Link>\r\n                </div>\r\n            )\r\n    }\r\n}\r\nexport default QuizzesScreen;\r\n","import React, { Component } from 'react';\r\nclass Bubbels extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='main'>\r\n                <div className='bubble bubble-1'></div>\r\n                <div className='bubble bubble-2'></div>\r\n                <div className='bubble bubble-3'></div>\r\n                <div className='bubble bubble-4'></div>\r\n                <div className='bubble bubble-5'></div>\r\n                <div className='bubble bubble-6'></div>\r\n                <div className='bubble bubble-7'></div>\r\n                <div className='bubble bubble-8'></div>\r\n                <div className='bubble bubble-9'></div>\r\n                <div className='bubble bubble-10'></div>\r\n                <div className='bubble bubble-11'></div>\r\n                <div className='bubble bubble-12'></div>\r\n                <div className='bubble bubble-13'></div>\r\n                <div className='bubble bubble-14'></div>\r\n                <div className='bubble bubble-15'></div>\r\n                <div className='bubble bubble-16'></div>\r\n                <div className='bubble bubble-17'></div>\r\n                <div className='bubble bubble-18'></div>\r\n                <div className='bubble bubble-19'></div>\r\n                <div className='bubble bubble-20'></div>\r\n                <div className='bubble bubble-21'></div>\r\n                <div className='bubble bubble-22'></div>\r\n                <div className='bubble bubble-23'></div>\r\n                <div className='bubble bubble-24'></div>\r\n                <div className='bubble bubble-25'></div>\r\n                <div className='bubble bubble-26'></div>\r\n                <div className='bubble bubble-27'></div>\r\n                <div className='bubble bubble-28'></div>\r\n                <div className='bubble bubble-29'></div>\r\n                <div className='bubble bubble-30'></div>\r\n            </div>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Bubbels;\r\n","import React, { Component } from 'react';\r\nimport '../../css/landing.css';\r\nimport { observable, action } from \"mobx\";\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Redirect } from 'react-router';\r\nimport Bubbels from '../General/bubbles'\r\n\r\n@inject('store')\r\n@observer\r\nclass LandingPage extends Component {\r\n    @observable userName = '';\r\n    @observable redirect = false;\r\n\r\n    @action inputChange = (e) => this.userName = e.target.value;\r\n\r\n    login = async () => {\r\n        if (this.userName) {\r\n            await this.props.store.addUser(this.userName)\r\n            this.redirect = true;\r\n        }\r\n        else alert(\"Please enter a username :)\")\r\n    }\r\n\r\n    render() {\r\n        if (this.redirect) {\r\n            return <Redirect push to=\"/home\" />;\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n            <Bubbels></Bubbels>\r\n                <h1 className=\"first-title\">QUIZZA</h1>\r\n                <div className=\"input-enter\">\r\n                    <span className=\"username\"> Enter your name and start the fun!</span><br></br><br></br><input className=\"input-username\" type=\"text\" name=\"userName\" onChange={this.inputChange} value={this.userName} />\r\n                    <br />\r\n                    <input className=\"LoginButton\" type=\"button\" onClick={this.login} value=\"Start playing!!\" />\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from 'react';\r\nimport '../../css/Homepage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HomePage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>QUIZZA</h1>\r\n                <p className=\"opening\">Welcome to Quizza, Are you ready to start the fun? <br />\r\n                    You have tree options in fornt of you.. you just need to choose one and start playing!!\r\n             </p>\r\n                <div className=\"apps\">\r\n                    <Link to=\"/quiz\"><div className=\"app quiz\">\r\n                        <h2 className=\"header\">TEST YOURSELF</h2><br />\r\n                        <span className=\"icon\"><i className=\"fas fa-question\"></i></span>\r\n                        <div className=\"describe\">Join us, and get to know yourself better! \r\n                            Also you can creat any quiz on your mind!</div>\r\n                    </div></Link>\r\n                    <Link to=\"/cloud\"><div className=\"app\">\r\n                        <h2 className=\"header\">CLOUD GAME</h2><br />\r\n                        <span className=\"icon\"><i className=\"fas fa-cloud\"></i></span>\r\n                        <div className=\"describe\">Pick your quote for today by our game!</div>\r\n                    </div></Link>\r\n                    <Link to=\"/horoscope\"><div className=\"app horoscope\">\r\n                        <h2 className=\"header\">WHAT YOUR HOROSCOPE?</h2><br />\r\n                        <span className=\"icon\"><i className=\"far fa-star\"></i></span>\r\n                        <div className=\"describe\">What about your luck today? You will never know but we can give you some idea.</div>\r\n                    </div></Link>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport { observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport '../../css/createQuizForm.css';\r\n\r\n@observer\r\nclass QuestionForm extends Component {\r\n    @observable questions = [];\r\n    @observable currentQuestion = { text: '', answer1: '', answer2: '', answer3: '', answer4: '' }\r\n\r\n    inputChange = (e) => this.currentQuestion[e.target.name] = e.target.value;\r\n\r\n    addQuestion = () => {\r\n        if ((this.questions.length < 10)\r\n            && (this.currentQuestion.text)\r\n            && (this.currentQuestion.answer1)\r\n            && (this.currentQuestion.answer2)\r\n            && (this.currentQuestion.answer3)\r\n            && (this.currentQuestion.answer4)) {\r\n            this.questions.push(this.currentQuestion)\r\n            this.currentQuestion = { text: '', answer1: '', answer2: '', answer3: '', answer4: '' }\r\n        }\r\n    }\r\n\r\n    showNewQuestionSection = () => {\r\n        return (\r\n            <div>\r\n                <input className=\"input-question\" type=\"text\" placeholder=\"Question\" name=\"text\" value={this.currentQuestion.text} onChange={this.inputChange} /> <br />\r\n                <input className=\"input-question\" type=\"text\" placeholder=\"Answer 1\" name=\"answer1\" value={this.currentQuestion.answer1} onChange={this.inputChange} /> <br />\r\n                <input className=\"input-question\" type=\"text\" placeholder=\"Answer 2\" name=\"answer2\" value={this.currentQuestion.answer2} onChange={this.inputChange} /> <br />\r\n                <input className=\"input-question\" type=\"text\" placeholder=\"Answer 3\" name=\"answer3\" value={this.currentQuestion.answer3} onChange={this.inputChange} /> <br />\r\n                <input className=\"input-question\" type=\"text\" placeholder=\"Answer 4\" name=\"answer4\" value={this.currentQuestion.answer4} onChange={this.inputChange} /> <br />\r\n                <input className=\"plus\" type=\"button\" value=\"+\" onClick={this.addQuestion} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    showExistingQuestions = (showNew) => {\r\n        return (\r\n            <div>\r\n                {showNew ? this.showNewQuestionSection() : <p>Sorry, no more questions are available! :(</p>}\r\n                {this.questions.map((q, i) => (\r\n                    <div className=\"question\" key={i}>\r\n                        <input type=\"text\" defaultValue={q.text} /> <br />\r\n                        <input type=\"text\" defaultValue={q.answer1} /> <br />\r\n                        <input type=\"text\" defaultValue={q.answer2} /> <br />\r\n                        <input type=\"text\" defaultValue={q.answer3} /> <br />\r\n                        <input type=\"text\" defaultValue={q.answer4} /> <br />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    createNewQuestion = () => {\r\n        if (this.questions.length === 10) return this.showExistingQuestions(false)\r\n        if (this.questions.length) return this.showExistingQuestions(true)\r\n        return this.showNewQuestionSection()\r\n    }\r\n\r\n    saveQuestions = () => {\r\n        if (this.questions.length >= 5) {\r\n            let formattedQuestions = [];\r\n            for (let q of this.questions) {\r\n                let question = {\r\n                    text: q.text,\r\n                    answers: [\r\n                        { text: q.answer1, score: 1 },\r\n                        { text: q.answer2, score: 2 },\r\n                        { text: q.answer3, score: 3 },\r\n                        { text: q.answer4, score: 4 }\r\n                    ]\r\n                }\r\n                formattedQuestions.push(question)\r\n            }\r\n            this.props.saveQuestions(formattedQuestions)\r\n        }\r\n        else alert('Please enter at least 5 questions...')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"question-form\">\r\n                <h4 className=\"result-title\">Enter questions and answers</h4>\r\n                <p>(please note that answer #1 must always fit result type #1 and so on)</p>\r\n                {this.createNewQuestion()}\r\n                <input className=\"save-button\" type=\"button\" value=\"save questions\" onClick={this.saveQuestions} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuestionForm;","import React, { Component } from \"react\";\r\nimport '../../css/createQuizForm.css';\r\n\r\nclass ResultsForm extends Component {\r\n    results = { title1: '', desc1: '', title2: '', desc2: '', title3: '', desc3: '', title4: '', desc4: '', }\r\n\r\n    saveResults = () => {\r\n        if ((this.results.title1)\r\n            && (this.results.desc1)\r\n            && (this.results.title2)\r\n            && (this.results.desc2)\r\n            && (this.results.title3)\r\n            && (this.results.desc3)\r\n            && (this.results.title4)\r\n            && (this.results.desc4)) {\r\n            let formattedResults = [\r\n                { score: 1, title: this.results.title1, desc: this.results.desc1 },\r\n                { score: 2, title: this.results.title2, desc: this.results.desc2 },\r\n                { score: 3, title: this.results.title3, desc: this.results.desc3 },\r\n                { score: 4, title: this.results.title4, desc: this.results.desc4 }\r\n            ];\r\n            this.props.saveResults(formattedResults)\r\n        } else alert(\"please create all the results!\")\r\n    }\r\n\r\n    inputChange = (e) => this.results[e.target.name] = e.target.value\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"results-form\">\r\n                <h4 className=\"result-title\">Enter the final result types:</h4>\r\n                <div className=\"result-box result1\">\r\n                    <div>1</div>\r\n                    Title: <input type=\"text\" name=\"title1\" placeholder=\"title\" onChange={this.inputChange} /> <br />\r\n                    Description: <input type=\"text\" name=\"desc1\" placeholder=\"description\" onChange={this.inputChange} />\r\n                </div>\r\n                <div className=\"result-box result2\">\r\n                    <div>2</div>\r\n                    Title: <input type=\"text\" name=\"title2\" placeholder=\"title\" onChange={this.inputChange} /> <br />\r\n                    Description: <input type=\"text\" name=\"desc2\" placeholder=\"description\" onChange={this.inputChange} />\r\n                </div>\r\n                <div className=\"result-box result3\">\r\n                    <div>3</div>\r\n                    Title: <input type=\"text\" name=\"title3\" placeholder=\"title\" onChange={this.inputChange} /> <br />\r\n                    Description: <input type=\"text\" name=\"desc3\" placeholder=\"description\" onChange={this.inputChange} />\r\n                </div>\r\n                <div className=\"result-box result4\">\r\n                    <div>4</div>\r\n                    Title: <input type=\"text\" name=\"title4\" placeholder=\"title\" onChange={this.inputChange} /> <br />\r\n                    Description: <input type=\"text\" name=\"desc4\" placeholder=\"description\" onChange={this.inputChange} />\r\n                </div>\r\n                <br></br>\r\n                <input className=\"save-button\" type=\"button\" value=\"save results\" onClick={this.saveResults} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultsForm;","import React, { Component } from 'react';\r\n// import { observable } from 'mobx';\r\nimport '../../css/createQuizForm.css';\r\nimport QuestionForm from './QuestionForm';\r\nimport ResultsForm from './ResultsForm';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { observable } from 'mobx';\r\nimport { Redirect } from 'react-router';\r\n\r\n@inject('store')\r\n@observer\r\nclass CreateForm extends Component {\r\n    formInputs = {\r\n        title: \"\",\r\n        description: \"\"\r\n    }\r\n\r\n    @observable redirect = false;\r\n\r\n    quizQuestions = null;\r\n    quizResults = null;\r\n\r\n    inputChange = (e) => this.formInputs[e.target.name] = e.target.value;\r\n\r\n    saveQuestions = (questions) => this.quizQuestions = questions;\r\n\r\n    saveResults = (results) => this.quizResults = results;\r\n\r\n    saveQuiz = async () => {\r\n        if ((this.formInputs.title)\r\n            && (this.formInputs.description)\r\n            && (this.quizQuestions)\r\n            && (this.quizResults)) {\r\n            const header = this.formInputs\r\n            const questions = this.quizQuestions\r\n            const results = this.quizResults\r\n            await this.props.store.saveQuiz(header, questions, results)\r\n            this.redirect = true;\r\n        } else alert('Please make sure to provide all fields!')\r\n    }\r\n\r\n    render() {\r\n        if (this.redirect) {\r\n            return <Redirect push to='/quiz' />;\r\n        }\r\n        return (\r\n            <div className=\"create-form\">\r\n            <Link to=\"/quiz\"><div className=\"BackButton\">Back to all quizzes</div></Link>\r\n                <h2 className=\"creat-title\">Create your own Quiz!</h2>\r\n                <div>\r\n                    <h3>Title:</h3>\r\n                    <br />\r\n                    <input type=\"text\" name=\"title\" onChange={this.inputChange} placeholder=\"title\" />\r\n                    <br />\r\n                </div>\r\n                <div>\r\n                    <h3> Description:</h3>\r\n                    <br />\r\n                    <textarea name=\"description\" onChange={this.inputChange} rows=\"4\" cols=\"40\" placeholder=\"describe your quiz...\" />\r\n                    <br/>\r\n                </div>\r\n                <ResultsForm saveResults={this.saveResults} />\r\n                <QuestionForm saveQuestions={this.saveQuestions} />\r\n                <input className=\"save-button\" type=\"button\" value=\"CREATE QUIZ!\" onClick={this.saveQuiz} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateForm;","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { observable, action } from \"mobx\";\r\nimport '../../css/horoscope.css';\r\n\r\n@observer\r\nclass Horoscope extends Component {\r\n    @observable horoscopeData = null\r\n\r\n    @observable userSign = \"Aries\"\r\n\r\n    @action changeInput = (e) => this.userSign=e.target.value;\r\n    \r\n    @action getMyHoroscope = () => {\r\n        const URL = 'https://aztro.sameerkumar.website/?sign=' + this.userSign + '&day=today';\r\n        fetch(URL, {\r\n            method: 'POST'\r\n        }).then(response => response.json())\r\n            .then(json => { \r\n                this.horoscopeData = json;\r\n                this.horoscopeData.sign = this.userSign;\r\n            });\r\n    }\r\n\r\n    showHoroscope = () => {\r\n        return (\r\n            <div className=\" all-horoscope\">\r\n                <h1 className=\"horoscope-title\">{this.horoscopeData.sign}</h1>\r\n                <p>Current Date: {this.horoscopeData.current_date} <br /></p>\r\n                <p>Date Range: {this.horoscopeData.date_range} <br /></p>\r\n                <p>Compatibility: {this.horoscopeData.compatibility} <br /></p>\r\n                <p>Lucky Number: {this.horoscopeData.lucky_number} <br /></p>\r\n                <p>Color: {this.horoscopeData.color} <br /></p>\r\n                <p>Mood: {this.horoscopeData.mood} <br /><br /></p>\r\n                <p>Daily Horoscope: {this.horoscopeData.description} <br /></p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <h1 id=\"horoscope-title\">Get my horoscope</h1>\r\n            <p>Select your fortune from the list and get your horoscope for today!</p>\r\n            <div className=\"dropdown\">\r\n                <select  className=\"btn btn-secondary dropdown-toggle select-button list\" value={this.userSign} onChange={this.changeInput}>\r\n                    <option className=\"dropdown-item\">Aries</option>\r\n                    <option className=\"dropdown-item\">Taurus</option>\r\n                    <option className=\"dropdown-item\">Gemini</option>\r\n                    <option className=\"dropdown-item\">Cancer</option>\r\n                    <option className=\"dropdown-item\">Leo</option>\r\n                    <option className=\"dropdown-item\">Virgo</option>\r\n                    <option className=\"dropdown-item\">Libra</option>\r\n                    <option className=\"dropdown-item\">Scorpio</option>\r\n                    <option className=\"dropdown-item\">Sagittarius</option>\r\n                    <option className=\"dropdown-item\">Capricorn</option>\r\n                    <option className=\"dropdown-item\">Aquarius</option>\r\n                    <option className=\"dropdown-item\">Pisces</option>\r\n                </select>\r\n                <input className=\"btn btn-secondary dropdown-toggle horoscop-button\" type='button' value='get my horoscope!' onClick={this.getMyHoroscope}/>\r\n                {this.horoscopeData ? this.showHoroscope() : null}\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Horoscope;","import React, { Component } from 'react';\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { observable } from \"mobx\";\r\nimport WordCloud from 'wordcloud';\r\nimport '../../css/cloud.css';\r\n\r\n@inject('store')\r\n@observer\r\nclass Cloud extends Component {\r\n\r\n    @observable showCloud = true;\r\n    @observable gameStarted = false;\r\n    @observable gueesed = false;\r\n    @observable wordInput = \"\";\r\n    @observable cloudCategories = [];\r\n    db = [];\r\n    selectedCategories = []\r\n\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://talaikis.com/api/quotes/\").then(res => res.json()).then(json => {\r\n            this.db = json;\r\n            console.log(this.db)\r\n            this.getCategories()\r\n        })\r\n    }\r\n\r\n    getCategories = () => {\r\n        for (let i = 0; i < 40; i++) {\r\n            let size = Math.floor(Math.random()*5+5);\r\n            this.selectedCategories.push({\"cat\": this.db[i][\"cat\"], \"size\": size})\r\n        }\r\n    }\r\n\r\n    inputChange = (e) => {\r\n        this.wordInput = e.target.value\r\n        console.log(this.wordInput)\r\n    }\r\n\r\n    startGame = () => {\r\n        const cat = this.selectedCategories\r\n        for (let i in cat) {\r\n            this.cloudCategories.push([cat[i][\"cat\"], cat[i][\"size\"]])\r\n        }\r\n        console.log(this.cloudCategories)\r\n        WordCloud(document.getElementById(\"mc\"),\r\n            {\r\n                list: this.cloudCategories,\r\n                weightFactor: 5,\r\n                fontFamily: 'Times, serif',\r\n                rotationSteps: 2,\r\n                backgroundColor: '#ffe0e0',\r\n            })\r\n        setTimeout(() => {\r\n            this.showCloud = false;\r\n            this.gameStarted = true;\r\n        }, 3000);\r\n    }\r\n\r\n    printCloudGame = () => {\r\n        if (this.gameStarted) {\r\n            return (\r\n                <div>\r\n                    <p>which word do you remember ?</p>\r\n                    <input type=\"text\" name=\"wordInput\" value={this.wordInput} onChange={this.inputChange} className=\"answer-input\" />\r\n                    <input type=\"button\" className=\"guess-button\" value=\"guess\" onClick={this.checkWord} />\r\n                </div>\r\n            )\r\n        }\r\n        else return null;\r\n    }\r\n\r\n    checkWord = ()=> {\r\n        let cat = this.selectedCategories\r\n        for (let i in cat) {\r\n            if (this.wordInput === cat[i][\"cat\"]) {\r\n                this.gueesed = true;\r\n            } else console.log(\"try\")\r\n        }\r\n    }\r\n\r\n    printQuote = ()=> {\r\n        let db = this.db\r\n        for(let i in db) {\r\n            if (this.gueesed) {\r\n                return <p>{db[i][\"quote\"]}<br/>-{db[i][\"author\"]}</p>\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1 className=\"cloud-title\">Cloud Game</h1>\r\n                    <h2 className=\"cloud-desc\">What quote best fits you?\r\n                        <br/>\r\n                        Start the game to find out!\r\n                    </h2>\r\n                    {this.showCloud ? <input type=\"button\" className=\"start-button\" onClick={this.startGame} value=\"Start Game!\" /> : null}\r\n                    <br />\r\n                    {this.showCloud ? <canvas className=\"cloud\" height='400' width='450' id=\"mc\" ref=\"my-canvas\" ></canvas> : null}\r\n                </div>\r\n                {this.printCloudGame()}\r\n                {this.gueesed ? this.printQuote() : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cloud;\r\n\r\n/*{ \"word\": \"love\", \"size\": 5 },\r\n        { \"word\": \"health\", \"size\": 6 },\r\n        { \"word\": \"Friendship\", \"size\": 7 },\r\n        { \"word\": \"food\", \"size\": 8 },\r\n        { \"word\": \"experience\", \"size\": 9 },\r\n        { \"word\": \"life\", \"size\": 9 },\r\n        { \"word\": \"travel\", \"size\": 8 },\r\n        { \"word\": \"sports\", \"size\": 7 },\r\n        { \"word\": \"romance\", \"size\": 6 },\r\n        { \"word\": \"funny\", \"size\": 5 },\r\n        { \"word\": \"fear\", \"size\": 5 },\r\n        { \"word\": \"respect\", \"size\": 6 },\r\n        { \"word\": \"money\", \"size\": 7 },\r\n        { \"word\": \"happiness\", \"size\": 8 },\r\n        { \"word\": \"business\", \"size\": 9 },\r\n        { \"word\": \"family\", \"size\": 9 },\r\n        { \"word\": \"future\", \"size\": 8 },\r\n        { \"word\": \"religion\", \"size\": 7 },\r\n        { \"word\": \"anger\", \"size\": 6 },\r\n        { \"word\": \"learning\", \"size\": 5 } \r\n        */","import React, { Component } from 'react';\r\nimport NavBar from './components/General/NavBar';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport QuizzesScreen from './components/Quiz_Catalog/QuizzesScreen';\r\nimport LandingPage from './components/Landing/LandingPage';\r\nimport HomePage from './components/Landing/HomePage';\r\nimport CreateQuiz from './components/Create/CreateQuizForm';\r\nimport './App.css';\r\nimport Horoscope from './components/Horoscope/Horoscope';\r\nimport Cloud from './components/Cloud/Cloud';\r\nimport Quiz from './components/Quiz/Quiz';\r\n\r\n@inject('store')\r\n@observer\r\nclass App extends Component {\r\n  navbarHide = () => {\r\n    if(this.props.store.user) return <NavBar />\r\n    return null;\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n    <Router>\r\n      <div className=\"App\">\r\n      {this.navbarHide()}\r\n        <Route path=\"/\" exact render={() => <LandingPage />} />\r\n        <Route path=\"/quiz\" exact render={() => <QuizzesScreen />} />\r\n        <Route path=\"/create-quiz\" exact render={()=> <CreateQuiz />} />\r\n        <Route path=\"/home\" exact render={()=> <HomePage />} />\r\n        <Route path=\"/horoscope\" exact render={()=> <Horoscope />} />\r\n        <Route path=\"/cloud\" exact render={()=> <Cloud />} />\r\n        <Route exact path=\"/quiz/:id\" render={({ match }) => <Quiz match={match} />} />\r\n      </div>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action } from 'mobx';\r\nimport axios from 'axios';\r\n\r\nclass QuizStore {\r\n    @observable user = JSON.parse(localStorage.getItem('user')) || null;\r\n    @observable quizzes = null;\r\n    @observable quiz = null;\r\n    @observable isLoading = true;\r\n\r\n    @action addUser = async (userName) => {\r\n        const newUser = await axios.get('/user/' + userName);\r\n        this.user = newUser.data;\r\n        localStorage.setItem('user', JSON.stringify(this.user));\r\n    }\r\n\r\n    @action logout = () => {\r\n        this.user = null;\r\n        localStorage.setItem('user', JSON.stringify(null))\r\n    }\r\n\r\n    @action getQuizzes = async ()=> {\r\n        const allQuizzes = await axios.get('/quizzes');\r\n        this.quizzes = allQuizzes.data;\r\n    }\r\n\r\n    @action getCurrentQuizz = async (quizID)=> { \r\n        const currentQuizz = await axios.get('/quiz/' + quizID);\r\n        this.quiz = currentQuizz.data;\r\n    }\r\n\r\n    @action saveQuiz = async (header, questions, results)=> {\r\n        let newQuiz = {\r\n            title: header.title,\r\n            desc: header.description,\r\n            questions: questions,\r\n            results: results\r\n        }\r\n        let q = await axios.post('/quiz', newQuiz)\r\n        console.log(q.data);\r\n    }\r\n    \r\n    @action saveUserResults = async (score) => {\r\n        let userQuiz = { qID: this.quiz._id, score: score }\r\n        let user = await axios.post('/user/addQuiz/' + this.user._id, userQuiz)\r\n        this.user = user.data;\r\n    }\r\n}\r\n\r\nconst store = new QuizStore();\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store/quizStore';\r\nimport { Provider } from 'mobx-react';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <App />\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}